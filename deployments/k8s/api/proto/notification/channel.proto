syntax = "proto3";

option go_package="channel";

package umrs.notification.channel;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

// AdminLevel is level assigned to an admin
enum AdminLevel {
    VIEWER = 0; // Read-only;
    EDITOR = 1; // Read-Write; specific writes
    OWNER = 2; // Full control; sudo
}

// AdminCreds is request to authenticate admin
message AdminCreds {
    string admin_id = 1;
    AdminLevel level = 2;
}

// Channel is a publisher network with subscribers
message Channel {
    string channel_id = 1;
    string title = 2;
    string description = 3;
    string owner_id = 4;
    string created_time = 5;
    int32 subscribers = 6;
}

// CreateChannelRequest is request to create a new channel
message CreateChannelRequest {
    Channel channel = 1;
}

// CreateChannelResponse is response after creating a channel
message CreateChannelResponse {
    string channel_id = 1;
}

// UpdateChannelRequest request to update a channel resource
message UpdateChannelRequest {
    string channel_id = 1;  
    Channel channel = 2;
}

// DeleteChannelRequest is request to delete a channel resource
message DeleteChannelRequest {
    string channel_id = 1;    
}

// ListChannelsRequest is request to retrive a collection of channels resource
message ListChannelsRequest {
    int32 page_token = 1;
    int32 page_size = 2;
}

// ListChannelsResponse is response containing collection of channel resource
message ListChannelsResponse {
    repeated Channel channels = 1;
    int32 next_page_token = 2;
}

// GetChannelRequest is request to retrieve a channel resource
message GetChannelRequest {
    string channel_id = 1;  
}

// Manages channels in a network
service ChannelAPI {
    // Creates a new subscriber channel
    rpc CreateChannel (CreateChannelRequest) returns (CreateChannelResponse) {
        // CreateChannel maps to HTTP POST method
        // channel maps to the body of the request
        option (google.api.http) = {
            post: "/api/umrs/channels",
            body: "*"
        };
    }

    // Updates an existing channel resource
    rpc UpdateChannel (UpdateChannelRequest) returns (google.protobuf.Empty) {
        // UpdateChannel maps to HTTP PUT method.
        // channel maps to the body of the request
        // channel_id maps to URL path parameters
        option (google.api.http) = {
            put: "/api/umrs/channels/{channel_id}",
            body: "*"
        };
    }

    // Removes a subscribers channel
    rpc DeleteChannel (DeleteChannelRequest) returns (google.protobuf.Empty) {
        // DeleteChannel maps to HTTP DELETE method
        // channel_id maps to URL path parameters
        option (google.api.http) = {
            delete: "/api/umrs/channels/{channel_id}"
        };
    }

    // Retrieves a collection of channels resource
    rpc ListChannels (ListChannelsRequest) returns (ListChannelsResponse) {
        // ListChannels maps to HTTP GET method
        // page_token and page_size maps to URL query parameters
        option (google.api.http) = {
            get: "/api/umrs/channels"
        };
    }

    // Retrieves a single channel resource
    rpc GetChannel (GetChannelRequest) returns (Channel) {
        // GetChannel maps to HTTP GET method
        // channel_id maps to URL path parameters
        option (google.api.http) = {
            get: "/api/umrs/channels/{channel_id}"
        };
    }
}