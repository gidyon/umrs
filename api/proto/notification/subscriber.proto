syntax = "proto3";

option go_package="subscriber";

package umrs.notification.subscriber;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "notification.proto";

// Subscriber represent an entity that can subscribes to channels
message Subscriber {
    string account_id = 1;
    string email = 2;
    string phone = 3;
    umrs.notification.SendMethod send_method = 4;
    repeated string channels = 5;
}

// SubscriberRequest request to subscribes a user to a channel
message SubscriberRequest {
    string account_id = 1;
    string channel = 2;
}

// ListSubscribersRequest is request to list subscribers for a particular channel
message ListSubscribersRequest {
    string channel = 1;
    int32 page_token = 2;
    int32 page_size = 3;
}

// ListSubscribersResponse is response containing collection of subscribers
message ListSubscribersResponse {
    repeated Subscriber subscribers = 1;
    int32 next_page_token = 2;
}

// GetSubscriberRequest is request to retrieve a subscriber
message GetSubscriberRequest {
    string account_id = 1;
}

// GetSendMethodRequest is request to get the send method of a user
message GetSendMethodRequest {
    string account_id = 1;
}

// GetSendMethodResponse is response containing the send method
message GetSendMethodResponse {
    umrs.notification.SendMethod send_method = 1;      
}

// Manages subscribers for a channel
service SubscriberAPI {
    // Subscribes a user to a channel
    rpc Subscribe (SubscriberRequest) returns (google.protobuf.Empty) {
        // Maps to HTTP POST method
        // Everything is contained in the body of request
        option (google.api.http) = {
            post: "/api/umrs/subscribers/subscribe",
            body: "*"
        };
    }

    // Unsubscribes a user from a channel
    rpc Unsubscribe (SubscriberRequest) returns (google.protobuf.Empty) {
        // Maps to HTTP POST method
        // Everthing is mapped in the body of request
        option (google.api.http) = {
            post: "/api/umrs/subscribers/unsubscribe",
            body: "*"
        };
    }

    // Lists subscribers for a channel
    rpc ListSubscribers (ListSubscribersRequest) returns (ListSubscribersResponse) {
        // Maps to HTTP GET
        // channel maps to URL path parameter
        // page_token and admin_creds maps to URL query parameters
        option (google.api.http) = {
            get: "/api/umrs/subscribers/channel/{channel}/subscribers",
        };
    }

    // GetSubscriber retrieves information about a single subscriber
    rpc GetSubscriber(GetSubscriberRequest) returns (Subscriber) {
        // Maps to HTTP GET Mmethod
        // account_id maps to URL path parameter
        option (google.api.http) = {
            get: "/api/umrs/subscribers/{account_id}",
        };  
    };

    // Retrieve send method for an account
    rpc GetSendMethod (GetSendMethodRequest) returns (GetSendMethodResponse) {
        // Maps to HTTP GET method
        // account_id maps to URL query parameters
        option (google.api.http) = {
            post: "/api/umrs/subscribers/{account_id}/send_method",
            body: "*"
        };
    };
}