// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messaging.proto

package messaging

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/longrunning"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// MessageType is category of a message
type MessageType int32

const (
	MessageType_ALL         MessageType = 0
	MessageType_PROMOTIONAL MessageType = 1
	MessageType_REMINDER    MessageType = 2
	MessageType_WARNING     MessageType = 3
	MessageType_ALERT       MessageType = 4
	MessageType_INFO        MessageType = 5
)

var MessageType_name = map[int32]string{
	0: "ALL",
	1: "PROMOTIONAL",
	2: "REMINDER",
	3: "WARNING",
	4: "ALERT",
	5: "INFO",
}

var MessageType_value = map[string]int32{
	"ALL":         0,
	"PROMOTIONAL": 1,
	"REMINDER":    2,
	"WARNING":     3,
	"ALERT":       4,
	"INFO":        5,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{0}
}

// SendMethod is the method used to send the message
type SendMethod int32

const (
	SendMethod_UNKNOWN SendMethod = 0
	SendMethod_EMAIL   SendMethod = 1
	SendMethod_SMS     SendMethod = 2
	SendMethod_CALL    SendMethod = 3
	SendMethod_PUSH    SendMethod = 4
)

var SendMethod_name = map[int32]string{
	0: "UNKNOWN",
	1: "EMAIL",
	2: "SMS",
	3: "CALL",
	4: "PUSH",
}

var SendMethod_value = map[string]int32{
	"UNKNOWN": 0,
	"EMAIL":   1,
	"SMS":     2,
	"CALL":    3,
	"PUSH":    4,
}

func (x SendMethod) String() string {
	return proto.EnumName(SendMethod_name, int32(x))
}

func (SendMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{1}
}

// Message is a message payload
type Message struct {
	MessageId            string            `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserId               string            `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title                string            `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Data                 string            `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Link                 string            `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	CreateTimeSeconds    int64             `protobuf:"varint,6,opt,name=create_time_seconds,json=createTimeSeconds,proto3" json:"create_time_seconds,omitempty"`
	Seen                 bool              `protobuf:"varint,7,opt,name=seen,proto3" json:"seen,omitempty"`
	Save                 bool              `protobuf:"varint,9,opt,name=save,proto3" json:"save,omitempty"`
	Type                 MessageType       `protobuf:"varint,10,opt,name=type,proto3,enum=umrs.messaging.MessageType" json:"type,omitempty"`
	SendMethods          []SendMethod      `protobuf:"varint,11,rep,packed,name=send_methods,json=sendMethods,proto3,enum=umrs.messaging.SendMethod" json:"send_methods,omitempty"`
	Details              map[string]string `protobuf:"bytes,12,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *Message) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Message) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Message) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Message) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *Message) GetCreateTimeSeconds() int64 {
	if m != nil {
		return m.CreateTimeSeconds
	}
	return 0
}

func (m *Message) GetSeen() bool {
	if m != nil {
		return m.Seen
	}
	return false
}

func (m *Message) GetSave() bool {
	if m != nil {
		return m.Save
	}
	return false
}

func (m *Message) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_ALL
}

func (m *Message) GetSendMethods() []SendMethod {
	if m != nil {
		return m.SendMethods
	}
	return nil
}

func (m *Message) GetDetails() map[string]string {
	if m != nil {
		return m.Details
	}
	return nil
}

// BroadCastMessageRequest is request to broadcast message to users
type BroadCastMessageRequest struct {
	Channels             []string `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	Message              *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BroadCastMessageRequest) Reset()         { *m = BroadCastMessageRequest{} }
func (m *BroadCastMessageRequest) String() string { return proto.CompactTextString(m) }
func (*BroadCastMessageRequest) ProtoMessage()    {}
func (*BroadCastMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{1}
}

func (m *BroadCastMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadCastMessageRequest.Unmarshal(m, b)
}
func (m *BroadCastMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadCastMessageRequest.Marshal(b, m, deterministic)
}
func (m *BroadCastMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadCastMessageRequest.Merge(m, src)
}
func (m *BroadCastMessageRequest) XXX_Size() int {
	return xxx_messageInfo_BroadCastMessageRequest.Size(m)
}
func (m *BroadCastMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadCastMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BroadCastMessageRequest proto.InternalMessageInfo

func (m *BroadCastMessageRequest) GetChannels() []string {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *BroadCastMessageRequest) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

// SendMessageResponse is response after sending message contains message id
type SendMessageResponse struct {
	MessageId            string   `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageResponse) Reset()         { *m = SendMessageResponse{} }
func (m *SendMessageResponse) String() string { return proto.CompactTextString(m) }
func (*SendMessageResponse) ProtoMessage()    {}
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{2}
}

func (m *SendMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageResponse.Unmarshal(m, b)
}
func (m *SendMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageResponse.Marshal(b, m, deterministic)
}
func (m *SendMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageResponse.Merge(m, src)
}
func (m *SendMessageResponse) XXX_Size() int {
	return xxx_messageInfo_SendMessageResponse.Size(m)
}
func (m *SendMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageResponse proto.InternalMessageInfo

func (m *SendMessageResponse) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

// ListMessagesRequest is request to get user messages
type ListMessagesRequest struct {
	UserId               string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PageToken            int32         `protobuf:"varint,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32         `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TypeFilters          []MessageType `protobuf:"varint,4,rep,packed,name=type_filters,json=typeFilters,proto3,enum=umrs.messaging.MessageType" json:"type_filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListMessagesRequest) Reset()         { *m = ListMessagesRequest{} }
func (m *ListMessagesRequest) String() string { return proto.CompactTextString(m) }
func (*ListMessagesRequest) ProtoMessage()    {}
func (*ListMessagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{3}
}

func (m *ListMessagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMessagesRequest.Unmarshal(m, b)
}
func (m *ListMessagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMessagesRequest.Marshal(b, m, deterministic)
}
func (m *ListMessagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMessagesRequest.Merge(m, src)
}
func (m *ListMessagesRequest) XXX_Size() int {
	return xxx_messageInfo_ListMessagesRequest.Size(m)
}
func (m *ListMessagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMessagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMessagesRequest proto.InternalMessageInfo

func (m *ListMessagesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ListMessagesRequest) GetPageToken() int32 {
	if m != nil {
		return m.PageToken
	}
	return 0
}

func (m *ListMessagesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListMessagesRequest) GetTypeFilters() []MessageType {
	if m != nil {
		return m.TypeFilters
	}
	return nil
}

// Messages is a collection of user messages
type Messages struct {
	Messages             []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	NextPageToken        int32      `protobuf:"varint,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Messages) Reset()         { *m = Messages{} }
func (m *Messages) String() string { return proto.CompactTextString(m) }
func (*Messages) ProtoMessage()    {}
func (*Messages) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{4}
}

func (m *Messages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Messages.Unmarshal(m, b)
}
func (m *Messages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Messages.Marshal(b, m, deterministic)
}
func (m *Messages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Messages.Merge(m, src)
}
func (m *Messages) XXX_Size() int {
	return xxx_messageInfo_Messages.Size(m)
}
func (m *Messages) XXX_DiscardUnknown() {
	xxx_messageInfo_Messages.DiscardUnknown(m)
}

var xxx_messageInfo_Messages proto.InternalMessageInfo

func (m *Messages) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *Messages) GetNextPageToken() int32 {
	if m != nil {
		return m.NextPageToken
	}
	return 0
}

// MessageRequest is request to fetch or perform action to messages owned by user
type MessageRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageRequest) Reset()         { *m = MessageRequest{} }
func (m *MessageRequest) String() string { return proto.CompactTextString(m) }
func (*MessageRequest) ProtoMessage()    {}
func (*MessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{5}
}

func (m *MessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageRequest.Unmarshal(m, b)
}
func (m *MessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageRequest.Marshal(b, m, deterministic)
}
func (m *MessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageRequest.Merge(m, src)
}
func (m *MessageRequest) XXX_Size() int {
	return xxx_messageInfo_MessageRequest.Size(m)
}
func (m *MessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessageRequest proto.InternalMessageInfo

func (m *MessageRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// NewMessagesCount contains the count of new messages
type NewMessagesCount struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewMessagesCount) Reset()         { *m = NewMessagesCount{} }
func (m *NewMessagesCount) String() string { return proto.CompactTextString(m) }
func (*NewMessagesCount) ProtoMessage()    {}
func (*NewMessagesCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_42a1718997f046ec, []int{6}
}

func (m *NewMessagesCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewMessagesCount.Unmarshal(m, b)
}
func (m *NewMessagesCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewMessagesCount.Marshal(b, m, deterministic)
}
func (m *NewMessagesCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewMessagesCount.Merge(m, src)
}
func (m *NewMessagesCount) XXX_Size() int {
	return xxx_messageInfo_NewMessagesCount.Size(m)
}
func (m *NewMessagesCount) XXX_DiscardUnknown() {
	xxx_messageInfo_NewMessagesCount.DiscardUnknown(m)
}

var xxx_messageInfo_NewMessagesCount proto.InternalMessageInfo

func (m *NewMessagesCount) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterEnum("umrs.messaging.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("umrs.messaging.SendMethod", SendMethod_name, SendMethod_value)
	proto.RegisterType((*Message)(nil), "umrs.messaging.Message")
	proto.RegisterMapType((map[string]string)(nil), "umrs.messaging.Message.DetailsEntry")
	proto.RegisterType((*BroadCastMessageRequest)(nil), "umrs.messaging.BroadCastMessageRequest")
	proto.RegisterType((*SendMessageResponse)(nil), "umrs.messaging.SendMessageResponse")
	proto.RegisterType((*ListMessagesRequest)(nil), "umrs.messaging.ListMessagesRequest")
	proto.RegisterType((*Messages)(nil), "umrs.messaging.Messages")
	proto.RegisterType((*MessageRequest)(nil), "umrs.messaging.MessageRequest")
	proto.RegisterType((*NewMessagesCount)(nil), "umrs.messaging.NewMessagesCount")
}

func init() { proto.RegisterFile("messaging.proto", fileDescriptor_42a1718997f046ec) }

var fileDescriptor_42a1718997f046ec = []byte{
	// 912 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x5f, 0x6e, 0xdb, 0xc6,
	0x13, 0x0e, 0x4d, 0xc9, 0x92, 0x86, 0xfa, 0xd9, 0xfc, 0xad, 0x8b, 0x9a, 0x90, 0xeb, 0x40, 0xa5,
	0x8b, 0x56, 0x31, 0x62, 0x12, 0x51, 0x52, 0xa0, 0x30, 0xd0, 0x00, 0x8a, 0xa3, 0xa4, 0x42, 0xf5,
	0xc7, 0xa0, 0x14, 0x18, 0xe8, 0x8b, 0xb0, 0x16, 0x27, 0x34, 0x61, 0x6a, 0xa9, 0x72, 0x57, 0xb6,
	0x95, 0xa2, 0x2f, 0x3d, 0x40, 0x5f, 0x7a, 0x8b, 0x5e, 0xa3, 0x47, 0xe8, 0x15, 0x7a, 0x86, 0x3e,
	0x17, 0xbb, 0xa4, 0x54, 0x59, 0x8e, 0xec, 0x3e, 0x71, 0x76, 0xe6, 0xdb, 0x99, 0x6f, 0x66, 0x3e,
	0x2e, 0x6c, 0x8f, 0x91, 0x73, 0x1a, 0x84, 0x2c, 0x70, 0x26, 0x49, 0x2c, 0x62, 0xb2, 0x35, 0x1d,
	0x27, 0xdc, 0x59, 0x78, 0x2b, 0x7b, 0x41, 0x1c, 0x07, 0x11, 0xba, 0x2a, 0x7a, 0x3e, 0x7d, 0xef,
	0xe2, 0x78, 0x22, 0x66, 0x29, 0xb8, 0x72, 0x90, 0x05, 0xa3, 0x98, 0x05, 0xc9, 0x94, 0xb1, 0x90,
	0x05, 0x6e, 0x3c, 0xc1, 0x84, 0x8a, 0x30, 0x66, 0x3c, 0x03, 0x7d, 0x96, 0x81, 0xe8, 0x24, 0x74,
	0x29, 0x63, 0xb1, 0xb8, 0x15, 0x7d, 0xaa, 0x3e, 0xa3, 0xa3, 0x00, 0xd9, 0x11, 0xbf, 0xa6, 0x41,
	0x80, 0x89, 0x1b, 0x4f, 0x14, 0xe2, 0x2e, 0xda, 0xfe, 0x43, 0x87, 0x42, 0x47, 0x71, 0x43, 0xb2,
	0x0f, 0x90, 0xd2, 0xc4, 0x61, 0xe8, 0x5b, 0x5a, 0x55, 0xab, 0x95, 0xbc, 0x52, 0xe6, 0x69, 0xf9,
	0x64, 0x17, 0x0a, 0x53, 0x8e, 0x89, 0x8c, 0x6d, 0xa8, 0xd8, 0xa6, 0x3c, 0xb6, 0x7c, 0xf2, 0x09,
	0xe4, 0x45, 0x28, 0x22, 0xb4, 0x74, 0xe5, 0x4e, 0x0f, 0x84, 0x40, 0xce, 0xa7, 0x82, 0x5a, 0x39,
	0xe5, 0x54, 0xb6, 0xf4, 0x45, 0x21, 0xbb, 0xb4, 0xf2, 0xa9, 0x4f, 0xda, 0xc4, 0x81, 0x9d, 0x51,
	0x82, 0x54, 0xe0, 0x50, 0x84, 0x63, 0x1c, 0x72, 0x1c, 0xc5, 0xcc, 0xe7, 0xd6, 0x66, 0x55, 0xab,
	0xe9, 0xde, 0xff, 0xd3, 0xd0, 0x20, 0x1c, 0x63, 0x3f, 0x0d, 0xc8, 0x1c, 0x1c, 0x91, 0x59, 0x85,
	0xaa, 0x56, 0x2b, 0x7a, 0xca, 0x56, 0x3e, 0x7a, 0x85, 0x56, 0x29, 0xf3, 0xd1, 0x2b, 0x24, 0x2e,
	0xe4, 0xc4, 0x6c, 0x82, 0x16, 0x54, 0xb5, 0xda, 0x56, 0x7d, 0xcf, 0xb9, 0xbd, 0x06, 0x27, 0x6b,
	0x7a, 0x30, 0x9b, 0xa0, 0xa7, 0x80, 0xe4, 0x5b, 0x28, 0x73, 0x64, 0xfe, 0x70, 0x8c, 0xe2, 0x22,
	0xf6, 0xb9, 0x65, 0x54, 0xf5, 0xda, 0x56, 0xbd, 0xb2, 0x7a, 0xb1, 0x8f, 0xcc, 0xef, 0x28, 0x88,
	0x67, 0xf0, 0x85, 0xcd, 0xc9, 0x4b, 0x28, 0xf8, 0x28, 0x68, 0x18, 0x71, 0xab, 0x5c, 0xd5, 0x6b,
	0x46, 0xfd, 0x8b, 0x35, 0x25, 0x9d, 0xd7, 0x29, 0xac, 0xc9, 0x44, 0x32, 0xf3, 0xe6, 0x97, 0x2a,
	0xc7, 0x50, 0x5e, 0x0e, 0x10, 0x13, 0xf4, 0x4b, 0x9c, 0x65, 0x6b, 0x90, 0xa6, 0x9c, 0xf3, 0x15,
	0x8d, 0xa6, 0x98, 0x8d, 0x3f, 0x3d, 0x1c, 0x6f, 0x7c, 0xa3, 0xd9, 0x17, 0xb0, 0xfb, 0x2a, 0x89,
	0xa9, 0x7f, 0x42, 0xb9, 0xc8, 0xaa, 0x78, 0xf8, 0xe3, 0x14, 0xb9, 0x20, 0x15, 0x28, 0x8e, 0x2e,
	0x28, 0x63, 0x18, 0x71, 0x4b, 0xab, 0xea, 0xb5, 0x92, 0xb7, 0x38, 0x93, 0x67, 0x50, 0xc8, 0xd6,
	0xab, 0x52, 0x1a, 0xf5, 0xdd, 0x35, 0x94, 0xbd, 0x39, 0xce, 0x7e, 0x01, 0x3b, 0xe9, 0x00, 0xb2,
	0x22, 0x7c, 0x12, 0x33, 0xfe, 0x90, 0x74, 0xec, 0xdf, 0x35, 0xd8, 0x69, 0x87, 0x0b, 0x6e, 0x7c,
	0x4e, 0x6e, 0x49, 0x52, 0xda, 0x2d, 0x49, 0xed, 0x03, 0x4c, 0x64, 0x32, 0x11, 0x5f, 0x22, 0x53,
	0xe4, 0xf2, 0x5e, 0x49, 0x7a, 0x06, 0xd2, 0x41, 0xf6, 0x40, 0x1d, 0x86, 0x3c, 0xfc, 0x90, 0xaa,
	0x2e, 0xef, 0x15, 0xa5, 0xa3, 0x1f, 0x7e, 0x40, 0xf2, 0x12, 0xca, 0x72, 0x9f, 0xc3, 0xf7, 0x61,
	0x24, 0x30, 0xe1, 0x56, 0x4e, 0xed, 0xf1, 0x5e, 0x01, 0x18, 0xf2, 0xc2, 0x9b, 0x14, 0x6f, 0x07,
	0x50, 0x9c, 0xf3, 0x24, 0xcf, 0xa1, 0x98, 0x75, 0x91, 0x4e, 0xef, 0x9e, 0x11, 0x2d, 0x80, 0xe4,
	0x4b, 0xd8, 0x66, 0x78, 0x23, 0x86, 0x77, 0x3a, 0xf8, 0x9f, 0x74, 0x9f, 0xce, 0xbb, 0xb0, 0x9f,
	0xc0, 0xd6, 0xca, 0xb2, 0xd6, 0xcd, 0xc3, 0xae, 0x81, 0xd9, 0xc5, 0xeb, 0x39, 0xad, 0x93, 0x78,
	0xca, 0x84, 0x94, 0xc3, 0x48, 0x1a, 0x0a, 0x9a, 0xf7, 0xd2, 0xc3, 0xe1, 0x19, 0x18, 0x4b, 0x9d,
	0x91, 0x02, 0xe8, 0x8d, 0x76, 0xdb, 0x7c, 0x44, 0xb6, 0xc1, 0x38, 0xf5, 0x7a, 0x9d, 0xde, 0xa0,
	0xd5, 0xeb, 0x36, 0xda, 0xa6, 0x46, 0xca, 0x50, 0xf4, 0x9a, 0x9d, 0x56, 0xf7, 0x75, 0xd3, 0x33,
	0x37, 0x88, 0x01, 0x85, 0xb3, 0x86, 0xd7, 0x6d, 0x75, 0xdf, 0x9a, 0x3a, 0x29, 0x41, 0xbe, 0xd1,
	0x6e, 0x7a, 0x03, 0x33, 0x47, 0x8a, 0x90, 0x6b, 0x75, 0xdf, 0xf4, 0xcc, 0xfc, 0x61, 0x03, 0xe0,
	0x5f, 0xe9, 0x4b, 0xfc, 0xbb, 0xee, 0xf7, 0xdd, 0xde, 0x59, 0xd7, 0x7c, 0x24, 0xf1, 0xcd, 0x4e,
	0xa3, 0x25, 0xb3, 0x16, 0x40, 0xef, 0x77, 0xfa, 0xe6, 0x86, 0xbc, 0x78, 0x22, 0x2b, 0xeb, 0xd2,
	0x3a, 0x7d, 0xd7, 0xff, 0xce, 0xcc, 0xd5, 0xff, 0xce, 0x41, 0xa9, 0x33, 0x1f, 0x1c, 0xb9, 0x01,
	0x73, 0x55, 0xb4, 0xe4, 0xab, 0xd5, 0xe9, 0xae, 0x91, 0x75, 0xe5, 0x53, 0x27, 0x7d, 0x04, 0x9d,
	0xf9, 0x33, 0xea, 0x34, 0xe5, 0x33, 0x6a, 0x1f, 0xfc, 0xf2, 0xe7, 0x5f, 0xbf, 0x6d, 0xec, 0xdb,
	0x96, 0x7a, 0x1d, 0x17, 0x79, 0xdc, 0x73, 0x99, 0x67, 0x44, 0xb9, 0x38, 0xd6, 0x0e, 0xc9, 0x25,
	0x18, 0x4b, 0x22, 0x26, 0xeb, 0x56, 0x5a, 0x39, 0xf8, 0xf8, 0xbf, 0x7f, 0x4b, 0xfa, 0xf6, 0x63,
	0x55, 0xd1, 0xb2, 0x77, 0x56, 0x2a, 0xca, 0xb7, 0x41, 0x16, 0xbb, 0x81, 0xf2, 0xb2, 0xf4, 0xc9,
	0x9d, 0xa4, 0x1f, 0xf9, 0x31, 0x2a, 0xd6, 0x1a, 0x4a, 0xdc, 0x7e, 0xa2, 0xca, 0x1d, 0x90, 0xcf,
	0x57, 0xca, 0xcd, 0xd5, 0xe7, 0xfe, 0x94, 0x29, 0xe8, 0x67, 0x72, 0x0d, 0x05, 0x0f, 0xa9, 0xdf,
	0x88, 0x22, 0xf2, 0x78, 0x9d, 0x6a, 0x1f, 0x18, 0xe7, 0x0b, 0x55, 0xcd, 0xa9, 0x3f, 0x55, 0xd5,
	0xae, 0x9e, 0xdd, 0x5b, 0xd0, 0x4d, 0x90, 0xfa, 0x34, 0x8a, 0xc8, 0xaf, 0x1a, 0xec, 0xbc, 0x45,
	0x71, 0x47, 0xb1, 0x0f, 0xb1, 0xa8, 0xae, 0xc6, 0x57, 0x33, 0xd8, 0x5f, 0x2b, 0x3e, 0x2e, 0x39,
	0xfa, 0x4f, 0x7c, 0x18, 0x5e, 0xab, 0x9f, 0xe2, 0x95, 0xf1, 0x43, 0x69, 0x01, 0x3c, 0xdf, 0x54,
	0x3d, 0x3e, 0xff, 0x27, 0x00, 0x00, 0xff, 0xff, 0x13, 0x56, 0xb6, 0x9d, 0xaa, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessagingClient is the client API for Messaging service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessagingClient interface {
	// Broadcasts a message
	BroadCastMessage(ctx context.Context, in *BroadCastMessageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Sends message to a single destination
	SendMessage(ctx context.Context, in *Message, opts ...grpc.CallOption) (*SendMessageResponse, error)
	// Retrieves user messages
	ListMessages(ctx context.Context, in *ListMessagesRequest, opts ...grpc.CallOption) (*Messages, error)
	// Updates all messages status as read
	ReadAll(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Fetches count of new messages
	GetNewMessagesCount(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*NewMessagesCount, error)
}

type messagingClient struct {
	cc *grpc.ClientConn
}

func NewMessagingClient(cc *grpc.ClientConn) MessagingClient {
	return &messagingClient{cc}
}

func (c *messagingClient) BroadCastMessage(ctx context.Context, in *BroadCastMessageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/umrs.messaging.Messaging/BroadCastMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) SendMessage(ctx context.Context, in *Message, opts ...grpc.CallOption) (*SendMessageResponse, error) {
	out := new(SendMessageResponse)
	err := c.cc.Invoke(ctx, "/umrs.messaging.Messaging/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) ListMessages(ctx context.Context, in *ListMessagesRequest, opts ...grpc.CallOption) (*Messages, error) {
	out := new(Messages)
	err := c.cc.Invoke(ctx, "/umrs.messaging.Messaging/ListMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) ReadAll(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/umrs.messaging.Messaging/ReadAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagingClient) GetNewMessagesCount(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*NewMessagesCount, error) {
	out := new(NewMessagesCount)
	err := c.cc.Invoke(ctx, "/umrs.messaging.Messaging/GetNewMessagesCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessagingServer is the server API for Messaging service.
type MessagingServer interface {
	// Broadcasts a message
	BroadCastMessage(context.Context, *BroadCastMessageRequest) (*empty.Empty, error)
	// Sends message to a single destination
	SendMessage(context.Context, *Message) (*SendMessageResponse, error)
	// Retrieves user messages
	ListMessages(context.Context, *ListMessagesRequest) (*Messages, error)
	// Updates all messages status as read
	ReadAll(context.Context, *MessageRequest) (*empty.Empty, error)
	// Fetches count of new messages
	GetNewMessagesCount(context.Context, *MessageRequest) (*NewMessagesCount, error)
}

func RegisterMessagingServer(s *grpc.Server, srv MessagingServer) {
	s.RegisterService(&_Messaging_serviceDesc, srv)
}

func _Messaging_BroadCastMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadCastMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).BroadCastMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.messaging.Messaging/BroadCastMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).BroadCastMessage(ctx, req.(*BroadCastMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.messaging.Messaging/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).SendMessage(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_ListMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).ListMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.messaging.Messaging/ListMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).ListMessages(ctx, req.(*ListMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_ReadAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).ReadAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.messaging.Messaging/ReadAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).ReadAll(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Messaging_GetNewMessagesCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagingServer).GetNewMessagesCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.messaging.Messaging/GetNewMessagesCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagingServer).GetNewMessagesCount(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Messaging_serviceDesc = grpc.ServiceDesc{
	ServiceName: "umrs.messaging.Messaging",
	HandlerType: (*MessagingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BroadCastMessage",
			Handler:    _Messaging_BroadCastMessage_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _Messaging_SendMessage_Handler,
		},
		{
			MethodName: "ListMessages",
			Handler:    _Messaging_ListMessages_Handler,
		},
		{
			MethodName: "ReadAll",
			Handler:    _Messaging_ReadAll_Handler,
		},
		{
			MethodName: "GetNewMessagesCount",
			Handler:    _Messaging_GetNewMessagesCount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "messaging.proto",
}
