// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ledger.proto

package ledger

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Operation is the kind of operation being perfomed on the ledger
type Operation int32

const (
	Operation_UKNOWN                          Operation = 0
	Operation_ADD_PATIENT_TREATMENT_RECORD    Operation = 1
	Operation_ADD_PATIENT_MEDICAL_DATA        Operation = 2
	Operation_ADD_INSURANCE                   Operation = 3
	Operation_ADD_HOSPITAL                    Operation = 4
	Operation_UPDATE_PATIENT_TREATMENT_RECORD Operation = 5
	Operation_UPDATE_PATIENT_MEDICAL_DATA     Operation = 6
	Operation_UPDATE_INSURANCE                Operation = 7
	Operation_UPDATE_HOSPITAL                 Operation = 8
	Operation_DELETE_PATIENT_TREATMENT_RECORD Operation = 9
	Operation_DELETE_PATIENT_MEDICAL_DATA     Operation = 10
	Operation_DELETE_INSURANCE                Operation = 11
	Operation_DELETE_HOSPITAL                 Operation = 12
	Operation_GRANT_PERMISSION                Operation = 13
	Operation_REPORT_ISSUE                    Operation = 14
	Operation_GENERIC                         Operation = 15
)

var Operation_name = map[int32]string{
	0:  "UKNOWN",
	1:  "ADD_PATIENT_TREATMENT_RECORD",
	2:  "ADD_PATIENT_MEDICAL_DATA",
	3:  "ADD_INSURANCE",
	4:  "ADD_HOSPITAL",
	5:  "UPDATE_PATIENT_TREATMENT_RECORD",
	6:  "UPDATE_PATIENT_MEDICAL_DATA",
	7:  "UPDATE_INSURANCE",
	8:  "UPDATE_HOSPITAL",
	9:  "DELETE_PATIENT_TREATMENT_RECORD",
	10: "DELETE_PATIENT_MEDICAL_DATA",
	11: "DELETE_INSURANCE",
	12: "DELETE_HOSPITAL",
	13: "GRANT_PERMISSION",
	14: "REPORT_ISSUE",
	15: "GENERIC",
}

var Operation_value = map[string]int32{
	"UKNOWN":                          0,
	"ADD_PATIENT_TREATMENT_RECORD":    1,
	"ADD_PATIENT_MEDICAL_DATA":        2,
	"ADD_INSURANCE":                   3,
	"ADD_HOSPITAL":                    4,
	"UPDATE_PATIENT_TREATMENT_RECORD": 5,
	"UPDATE_PATIENT_MEDICAL_DATA":     6,
	"UPDATE_INSURANCE":                7,
	"UPDATE_HOSPITAL":                 8,
	"DELETE_PATIENT_TREATMENT_RECORD": 9,
	"DELETE_PATIENT_MEDICAL_DATA":     10,
	"DELETE_INSURANCE":                11,
	"DELETE_HOSPITAL":                 12,
	"GRANT_PERMISSION":                13,
	"REPORT_ISSUE":                    14,
	"GENERIC":                         15,
}

func (x Operation) String() string {
	return proto.EnumName(Operation_name, int32(x))
}

func (Operation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{0}
}

// Actor represents the actor group performing a given operation
type Actor int32

const (
	Actor_UNKNOWN     Actor = 0
	Actor_PATIENT     Actor = 1
	Actor_ADMIN       Actor = 2
	Actor_INSURANCE   Actor = 3
	Actor_HOSPITAL    Actor = 4
	Actor_GOVERNMENT  Actor = 5
	Actor_THIRD_PARTY Actor = 6
)

var Actor_name = map[int32]string{
	0: "UNKNOWN",
	1: "PATIENT",
	2: "ADMIN",
	3: "INSURANCE",
	4: "HOSPITAL",
	5: "GOVERNMENT",
	6: "THIRD_PARTY",
}

var Actor_value = map[string]int32{
	"UNKNOWN":     0,
	"PATIENT":     1,
	"ADMIN":       2,
	"INSURANCE":   3,
	"HOSPITAL":    4,
	"GOVERNMENT":  5,
	"THIRD_PARTY": 6,
}

func (x Actor) String() string {
	return proto.EnumName(Actor_name, int32(x))
}

func (Actor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{1}
}

// OperationStatus is the status of an operation
type OperationStatus int32

const (
	OperationStatus_PENDING   OperationStatus = 0
	OperationStatus_COMPLETED OperationStatus = 1
	OperationStatus_FAILED    OperationStatus = 2
)

var OperationStatus_name = map[int32]string{
	0: "PENDING",
	1: "COMPLETED",
	2: "FAILED",
}

var OperationStatus_value = map[string]int32{
	"PENDING":   0,
	"COMPLETED": 1,
	"FAILED":    2,
}

func (x OperationStatus) String() string {
	return proto.EnumName(OperationStatus_name, int32(x))
}

func (OperationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{2}
}

// ActorPayload contains payload for an actor
type ActorPayload struct {
	Actor                Actor    `protobuf:"varint,1,opt,name=actor,proto3,enum=umrs.ledger.Actor" json:"actor,omitempty"`
	ActorId              string   `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	ActorNames           string   `protobuf:"bytes,3,opt,name=actor_names,json=actorNames,proto3" json:"actor_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActorPayload) Reset()         { *m = ActorPayload{} }
func (m *ActorPayload) String() string { return proto.CompactTextString(m) }
func (*ActorPayload) ProtoMessage()    {}
func (*ActorPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{0}
}

func (m *ActorPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActorPayload.Unmarshal(m, b)
}
func (m *ActorPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActorPayload.Marshal(b, m, deterministic)
}
func (m *ActorPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActorPayload.Merge(m, src)
}
func (m *ActorPayload) XXX_Size() int {
	return xxx_messageInfo_ActorPayload.Size(m)
}
func (m *ActorPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ActorPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ActorPayload proto.InternalMessageInfo

func (m *ActorPayload) GetActor() Actor {
	if m != nil {
		return m.Actor
	}
	return Actor_UNKNOWN
}

func (m *ActorPayload) GetActorId() string {
	if m != nil {
		return m.ActorId
	}
	return ""
}

func (m *ActorPayload) GetActorNames() string {
	if m != nil {
		return m.ActorNames
	}
	return ""
}

// Transaction represent a log's payload that is added to the ledger
type Transaction struct {
	Operation            Operation     `protobuf:"varint,1,opt,name=operation,proto3,enum=umrs.ledger.Operation" json:"operation,omitempty"`
	Creator              *ActorPayload `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Patient              *ActorPayload `protobuf:"bytes,3,opt,name=patient,proto3" json:"patient,omitempty"`
	Organization         *ActorPayload `protobuf:"bytes,4,opt,name=organization,proto3" json:"organization,omitempty"`
	Details              []byte        `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{1}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetOperation() Operation {
	if m != nil {
		return m.Operation
	}
	return Operation_UKNOWN
}

func (m *Transaction) GetCreator() *ActorPayload {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *Transaction) GetPatient() *ActorPayload {
	if m != nil {
		return m.Patient
	}
	return nil
}

func (m *Transaction) GetOrganization() *ActorPayload {
	if m != nil {
		return m.Organization
	}
	return nil
}

func (m *Transaction) GetDetails() []byte {
	if m != nil {
		return m.Details
	}
	return nil
}

// AddOperation data for mutation operation into the ledger
type AddOperation struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Details              string          `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	Result               string          `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Status               OperationStatus `protobuf:"varint,4,opt,name=status,proto3,enum=umrs.ledger.OperationStatus" json:"status,omitempty"`
	TimestampSec         int64           `protobuf:"varint,5,opt,name=timestamp_sec,json=timestampSec,proto3" json:"timestamp_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddOperation) Reset()         { *m = AddOperation{} }
func (m *AddOperation) String() string { return proto.CompactTextString(m) }
func (*AddOperation) ProtoMessage()    {}
func (*AddOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{2}
}

func (m *AddOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddOperation.Unmarshal(m, b)
}
func (m *AddOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddOperation.Marshal(b, m, deterministic)
}
func (m *AddOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddOperation.Merge(m, src)
}
func (m *AddOperation) XXX_Size() int {
	return xxx_messageInfo_AddOperation.Size(m)
}
func (m *AddOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_AddOperation.DiscardUnknown(m)
}

var xxx_messageInfo_AddOperation proto.InternalMessageInfo

func (m *AddOperation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddOperation) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *AddOperation) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *AddOperation) GetStatus() OperationStatus {
	if m != nil {
		return m.Status
	}
	return OperationStatus_PENDING
}

func (m *AddOperation) GetTimestampSec() int64 {
	if m != nil {
		return m.TimestampSec
	}
	return 0
}

// AddLogRequest is request to add a transaction log into ledger
type AddLogRequest struct {
	Transaction          *Transaction `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddLogRequest) Reset()         { *m = AddLogRequest{} }
func (m *AddLogRequest) String() string { return proto.CompactTextString(m) }
func (*AddLogRequest) ProtoMessage()    {}
func (*AddLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{3}
}

func (m *AddLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddLogRequest.Unmarshal(m, b)
}
func (m *AddLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddLogRequest.Marshal(b, m, deterministic)
}
func (m *AddLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddLogRequest.Merge(m, src)
}
func (m *AddLogRequest) XXX_Size() int {
	return xxx_messageInfo_AddLogRequest.Size(m)
}
func (m *AddLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddLogRequest proto.InternalMessageInfo

func (m *AddLogRequest) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

// AddLogResponse is response after a transaction log has been added to the ledger
type AddLogResponse struct {
	OperationId          string   `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddLogResponse) Reset()         { *m = AddLogResponse{} }
func (m *AddLogResponse) String() string { return proto.CompactTextString(m) }
func (*AddLogResponse) ProtoMessage()    {}
func (*AddLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{4}
}

func (m *AddLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddLogResponse.Unmarshal(m, b)
}
func (m *AddLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddLogResponse.Marshal(b, m, deterministic)
}
func (m *AddLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddLogResponse.Merge(m, src)
}
func (m *AddLogResponse) XXX_Size() int {
	return xxx_messageInfo_AddLogResponse.Size(m)
}
func (m *AddLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddLogResponse proto.InternalMessageInfo

func (m *AddLogResponse) GetOperationId() string {
	if m != nil {
		return m.OperationId
	}
	return ""
}

// Log contains a timestamp, hashes and transaction(s)
type Log struct {
	Timestamp            int64        `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Hash                 string       `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	PrevHash             string       `protobuf:"bytes,3,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	Payload              *Transaction `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{5}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Log) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Log) GetPrevHash() string {
	if m != nil {
		return m.PrevHash
	}
	return ""
}

func (m *Log) GetPayload() *Transaction {
	if m != nil {
		return m.Payload
	}
	return nil
}

// Logs is a collection of logs
type Logs struct {
	Logs                 []*Log   `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	NextPageToken        int32    `protobuf:"varint,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Logs) Reset()         { *m = Logs{} }
func (m *Logs) String() string { return proto.CompactTextString(m) }
func (*Logs) ProtoMessage()    {}
func (*Logs) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{6}
}

func (m *Logs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Logs.Unmarshal(m, b)
}
func (m *Logs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Logs.Marshal(b, m, deterministic)
}
func (m *Logs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Logs.Merge(m, src)
}
func (m *Logs) XXX_Size() int {
	return xxx_messageInfo_Logs.Size(m)
}
func (m *Logs) XXX_DiscardUnknown() {
	xxx_messageInfo_Logs.DiscardUnknown(m)
}

var xxx_messageInfo_Logs proto.InternalMessageInfo

func (m *Logs) GetLogs() []*Log {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *Logs) GetNextPageToken() int32 {
	if m != nil {
		return m.NextPageToken
	}
	return 0
}

// Filter contains information for querying ledger
type Filter struct {
	Filter               bool        `protobuf:"varint,1,opt,name=filter,proto3" json:"filter,omitempty"`
	ByDate               bool        `protobuf:"varint,2,opt,name=by_date,json=byDate,proto3" json:"by_date,omitempty"`
	StartDate            string      `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate              string      `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	ByOperation          bool        `protobuf:"varint,5,opt,name=by_operation,json=byOperation,proto3" json:"by_operation,omitempty"`
	Operations           []Operation `protobuf:"varint,6,rep,packed,name=operations,proto3,enum=umrs.ledger.Operation" json:"operations,omitempty"`
	ByCreatorActor       bool        `protobuf:"varint,7,opt,name=by_creator_actor,json=byCreatorActor,proto3" json:"by_creator_actor,omitempty"`
	CreatorActors        []Actor     `protobuf:"varint,8,rep,packed,name=creator_actors,json=creatorActors,proto3,enum=umrs.ledger.Actor" json:"creator_actors,omitempty"`
	ByCreatorId          bool        `protobuf:"varint,9,opt,name=by_creator_id,json=byCreatorId,proto3" json:"by_creator_id,omitempty"`
	CreatorIds           []string    `protobuf:"bytes,10,rep,name=creator_ids,json=creatorIds,proto3" json:"creator_ids,omitempty"`
	ByPatientId          bool        `protobuf:"varint,11,opt,name=by_patient_id,json=byPatientId,proto3" json:"by_patient_id,omitempty"`
	PatientIds           []string    `protobuf:"bytes,12,rep,name=patient_ids,json=patientIds,proto3" json:"patient_ids,omitempty"`
	ByOrganizationId     bool        `protobuf:"varint,13,opt,name=by_organization_id,json=byOrganizationId,proto3" json:"by_organization_id,omitempty"`
	OrganizationIds      []string    `protobuf:"bytes,14,rep,name=organization_ids,json=organizationIds,proto3" json:"organization_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{7}
}

func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetFilter() bool {
	if m != nil {
		return m.Filter
	}
	return false
}

func (m *Filter) GetByDate() bool {
	if m != nil {
		return m.ByDate
	}
	return false
}

func (m *Filter) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *Filter) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *Filter) GetByOperation() bool {
	if m != nil {
		return m.ByOperation
	}
	return false
}

func (m *Filter) GetOperations() []Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

func (m *Filter) GetByCreatorActor() bool {
	if m != nil {
		return m.ByCreatorActor
	}
	return false
}

func (m *Filter) GetCreatorActors() []Actor {
	if m != nil {
		return m.CreatorActors
	}
	return nil
}

func (m *Filter) GetByCreatorId() bool {
	if m != nil {
		return m.ByCreatorId
	}
	return false
}

func (m *Filter) GetCreatorIds() []string {
	if m != nil {
		return m.CreatorIds
	}
	return nil
}

func (m *Filter) GetByPatientId() bool {
	if m != nil {
		return m.ByPatientId
	}
	return false
}

func (m *Filter) GetPatientIds() []string {
	if m != nil {
		return m.PatientIds
	}
	return nil
}

func (m *Filter) GetByOrganizationId() bool {
	if m != nil {
		return m.ByOrganizationId
	}
	return false
}

func (m *Filter) GetOrganizationIds() []string {
	if m != nil {
		return m.OrganizationIds
	}
	return nil
}

// ListLogsRequest is request to list transaction logs
type ListLogsRequest struct {
	PageToken            int32    `protobuf:"varint,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Filter               *Filter  `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLogsRequest) Reset()         { *m = ListLogsRequest{} }
func (m *ListLogsRequest) String() string { return proto.CompactTextString(m) }
func (*ListLogsRequest) ProtoMessage()    {}
func (*ListLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{8}
}

func (m *ListLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLogsRequest.Unmarshal(m, b)
}
func (m *ListLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLogsRequest.Marshal(b, m, deterministic)
}
func (m *ListLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLogsRequest.Merge(m, src)
}
func (m *ListLogsRequest) XXX_Size() int {
	return xxx_messageInfo_ListLogsRequest.Size(m)
}
func (m *ListLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLogsRequest proto.InternalMessageInfo

func (m *ListLogsRequest) GetPageToken() int32 {
	if m != nil {
		return m.PageToken
	}
	return 0
}

func (m *ListLogsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListLogsRequest) GetFilter() *Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// GetLogRequest is request to retrieve a single transaction log
type GetLogRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLogRequest) Reset()         { *m = GetLogRequest{} }
func (m *GetLogRequest) String() string { return proto.CompactTextString(m) }
func (*GetLogRequest) ProtoMessage()    {}
func (*GetLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{9}
}

func (m *GetLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLogRequest.Unmarshal(m, b)
}
func (m *GetLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLogRequest.Marshal(b, m, deterministic)
}
func (m *GetLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLogRequest.Merge(m, src)
}
func (m *GetLogRequest) XXX_Size() int {
	return xxx_messageInfo_GetLogRequest.Size(m)
}
func (m *GetLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLogRequest proto.InternalMessageInfo

func (m *GetLogRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// AuthorizeClientRequest is request to register a chaincode client
type AuthorizeClientRequest struct {
	SuperAdminId         string   `protobuf:"bytes,1,opt,name=super_admin_id,json=superAdminId,proto3" json:"super_admin_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizeClientRequest) Reset()         { *m = AuthorizeClientRequest{} }
func (m *AuthorizeClientRequest) String() string { return proto.CompactTextString(m) }
func (*AuthorizeClientRequest) ProtoMessage()    {}
func (*AuthorizeClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{10}
}

func (m *AuthorizeClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeClientRequest.Unmarshal(m, b)
}
func (m *AuthorizeClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeClientRequest.Marshal(b, m, deterministic)
}
func (m *AuthorizeClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeClientRequest.Merge(m, src)
}
func (m *AuthorizeClientRequest) XXX_Size() int {
	return xxx_messageInfo_AuthorizeClientRequest.Size(m)
}
func (m *AuthorizeClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeClientRequest proto.InternalMessageInfo

func (m *AuthorizeClientRequest) GetSuperAdminId() string {
	if m != nil {
		return m.SuperAdminId
	}
	return ""
}

// AuthorizeClientResponse is response after registering chaincode client
type AuthorizeClientResponse struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizeClientResponse) Reset()         { *m = AuthorizeClientResponse{} }
func (m *AuthorizeClientResponse) String() string { return proto.CompactTextString(m) }
func (*AuthorizeClientResponse) ProtoMessage()    {}
func (*AuthorizeClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{11}
}

func (m *AuthorizeClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeClientResponse.Unmarshal(m, b)
}
func (m *AuthorizeClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeClientResponse.Marshal(b, m, deterministic)
}
func (m *AuthorizeClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeClientResponse.Merge(m, src)
}
func (m *AuthorizeClientResponse) XXX_Size() int {
	return xxx_messageInfo_AuthorizeClientResponse.Size(m)
}
func (m *AuthorizeClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeClientResponse proto.InternalMessageInfo

func (m *AuthorizeClientResponse) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

// GetLedgerStatRequest is request to get statistics of the ledger
type GetLedgerStatRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLedgerStatRequest) Reset()         { *m = GetLedgerStatRequest{} }
func (m *GetLedgerStatRequest) String() string { return proto.CompactTextString(m) }
func (*GetLedgerStatRequest) ProtoMessage()    {}
func (*GetLedgerStatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{12}
}

func (m *GetLedgerStatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLedgerStatRequest.Unmarshal(m, b)
}
func (m *GetLedgerStatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLedgerStatRequest.Marshal(b, m, deterministic)
}
func (m *GetLedgerStatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLedgerStatRequest.Merge(m, src)
}
func (m *GetLedgerStatRequest) XXX_Size() int {
	return xxx_messageInfo_GetLedgerStatRequest.Size(m)
}
func (m *GetLedgerStatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLedgerStatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLedgerStatRequest proto.InternalMessageInfo

// LedgerStats is ledger statistics
type LedgerStats struct {
	TotalTxLogs              int64    `protobuf:"varint,1,opt,name=total_tx_logs,json=totalTxLogs,proto3" json:"total_tx_logs,omitempty"`
	LastUpdatedTimestampSec  int64    `protobuf:"varint,2,opt,name=last_updated_timestamp_sec,json=lastUpdatedTimestampSec,proto3" json:"last_updated_timestamp_sec,omitempty"`
	LastVerifiedTimestampSec int64    `protobuf:"varint,3,opt,name=last_verified_timestamp_sec,json=lastVerifiedTimestampSec,proto3" json:"last_verified_timestamp_sec,omitempty"`
	LastInsertHash           string   `protobuf:"bytes,4,opt,name=last_insert_hash,json=lastInsertHash,proto3" json:"last_insert_hash,omitempty"`
	Valid                    bool     `protobuf:"varint,5,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *LedgerStats) Reset()         { *m = LedgerStats{} }
func (m *LedgerStats) String() string { return proto.CompactTextString(m) }
func (*LedgerStats) ProtoMessage()    {}
func (*LedgerStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_63585974d4c6a2c4, []int{13}
}

func (m *LedgerStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LedgerStats.Unmarshal(m, b)
}
func (m *LedgerStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LedgerStats.Marshal(b, m, deterministic)
}
func (m *LedgerStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LedgerStats.Merge(m, src)
}
func (m *LedgerStats) XXX_Size() int {
	return xxx_messageInfo_LedgerStats.Size(m)
}
func (m *LedgerStats) XXX_DiscardUnknown() {
	xxx_messageInfo_LedgerStats.DiscardUnknown(m)
}

var xxx_messageInfo_LedgerStats proto.InternalMessageInfo

func (m *LedgerStats) GetTotalTxLogs() int64 {
	if m != nil {
		return m.TotalTxLogs
	}
	return 0
}

func (m *LedgerStats) GetLastUpdatedTimestampSec() int64 {
	if m != nil {
		return m.LastUpdatedTimestampSec
	}
	return 0
}

func (m *LedgerStats) GetLastVerifiedTimestampSec() int64 {
	if m != nil {
		return m.LastVerifiedTimestampSec
	}
	return 0
}

func (m *LedgerStats) GetLastInsertHash() string {
	if m != nil {
		return m.LastInsertHash
	}
	return ""
}

func (m *LedgerStats) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterEnum("umrs.ledger.Operation", Operation_name, Operation_value)
	proto.RegisterEnum("umrs.ledger.Actor", Actor_name, Actor_value)
	proto.RegisterEnum("umrs.ledger.OperationStatus", OperationStatus_name, OperationStatus_value)
	proto.RegisterType((*ActorPayload)(nil), "umrs.ledger.ActorPayload")
	proto.RegisterType((*Transaction)(nil), "umrs.ledger.Transaction")
	proto.RegisterType((*AddOperation)(nil), "umrs.ledger.AddOperation")
	proto.RegisterType((*AddLogRequest)(nil), "umrs.ledger.AddLogRequest")
	proto.RegisterType((*AddLogResponse)(nil), "umrs.ledger.AddLogResponse")
	proto.RegisterType((*Log)(nil), "umrs.ledger.Log")
	proto.RegisterType((*Logs)(nil), "umrs.ledger.Logs")
	proto.RegisterType((*Filter)(nil), "umrs.ledger.Filter")
	proto.RegisterType((*ListLogsRequest)(nil), "umrs.ledger.ListLogsRequest")
	proto.RegisterType((*GetLogRequest)(nil), "umrs.ledger.GetLogRequest")
	proto.RegisterType((*AuthorizeClientRequest)(nil), "umrs.ledger.AuthorizeClientRequest")
	proto.RegisterType((*AuthorizeClientResponse)(nil), "umrs.ledger.AuthorizeClientResponse")
	proto.RegisterType((*GetLedgerStatRequest)(nil), "umrs.ledger.GetLedgerStatRequest")
	proto.RegisterType((*LedgerStats)(nil), "umrs.ledger.LedgerStats")
}

func init() { proto.RegisterFile("ledger.proto", fileDescriptor_63585974d4c6a2c4) }

var fileDescriptor_63585974d4c6a2c4 = []byte{
	// 1299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x56, 0xdb, 0x8e, 0xd3, 0x46,
	0x18, 0x26, 0xe7, 0xf8, 0x77, 0x0e, 0x66, 0x40, 0x8b, 0xd9, 0x5d, 0x44, 0x30, 0xa8, 0x4a, 0x69,
	0xb5, 0x17, 0x0b, 0x42, 0xa2, 0x88, 0x4a, 0x6e, 0x62, 0x16, 0x8b, 0xac, 0x13, 0x39, 0x5e, 0xaa,
	0xf6, 0xc6, 0x72, 0xe2, 0x21, 0xb8, 0xcd, 0xc6, 0xa9, 0x67, 0x82, 0xc8, 0x3e, 0x40, 0xd5, 0xdb,
	0xaa, 0x52, 0x5f, 0xa2, 0xcf, 0xd6, 0x77, 0xa8, 0xe6, 0xe0, 0xd8, 0xce, 0x02, 0xbd, 0xf3, 0x7c,
	0xff, 0xf7, 0x1f, 0xe6, 0x3f, 0x8d, 0xa1, 0xb5, 0xc4, 0xe1, 0x02, 0x27, 0x27, 0xeb, 0x24, 0xa6,
	0x31, 0x52, 0x37, 0x97, 0x09, 0x39, 0x11, 0x90, 0x41, 0xa1, 0x65, 0xce, 0x69, 0x9c, 0x4c, 0x82,
	0xed, 0x32, 0x0e, 0x42, 0xd4, 0x87, 0x5a, 0xc0, 0xce, 0x7a, 0xa9, 0x57, 0xea, 0x77, 0x4e, 0xd1,
	0x49, 0x8e, 0x7c, 0xc2, 0x99, 0xae, 0x20, 0xa0, 0xbb, 0xd0, 0xe4, 0x1f, 0x7e, 0x14, 0xea, 0xe5,
	0x5e, 0xa9, 0xaf, 0xb8, 0x0d, 0x7e, 0xb6, 0x43, 0x74, 0x1f, 0x54, 0x21, 0x5a, 0x05, 0x97, 0x98,
	0xe8, 0x15, 0x2e, 0x05, 0x0e, 0x39, 0x0c, 0x31, 0x7e, 0x2f, 0x83, 0xea, 0x25, 0xc1, 0x8a, 0x04,
	0x73, 0x1a, 0xc5, 0x2b, 0xf4, 0x14, 0x94, 0x78, 0x8d, 0x93, 0x80, 0x1d, 0xa4, 0xe7, 0x83, 0x82,
	0xe7, 0x71, 0x2a, 0x75, 0x33, 0x22, 0x7a, 0x02, 0x8d, 0x79, 0x82, 0x03, 0x16, 0x2d, 0x0b, 0x40,
	0x3d, 0xbd, 0x7b, 0x3d, 0x5a, 0x79, 0x2f, 0x37, 0x65, 0x32, 0xa5, 0x75, 0x40, 0x23, 0xbc, 0xa2,
	0x3c, 0xae, 0x2f, 0x2b, 0x49, 0x26, 0x7a, 0x09, 0xad, 0x38, 0x59, 0x04, 0xab, 0xe8, 0x4a, 0x84,
	0x58, 0xfd, 0x3f, 0xcd, 0x02, 0x1d, 0xe9, 0xd0, 0x08, 0x31, 0x0d, 0xa2, 0x25, 0xd1, 0x6b, 0xbd,
	0x52, 0xbf, 0xe5, 0xa6, 0x47, 0xe3, 0x9f, 0x12, 0xb4, 0xcc, 0x30, 0xdc, 0x5d, 0x0f, 0x75, 0xa0,
	0x1c, 0x85, 0x3c, 0x05, 0x8a, 0x5b, 0x8e, 0xc2, 0xbc, 0xaa, 0x4c, 0xb2, 0x3c, 0xa2, 0x03, 0xa8,
	0x27, 0x98, 0x6c, 0x96, 0x54, 0xe6, 0x57, 0x9e, 0xd0, 0x53, 0xa8, 0x13, 0x1a, 0xd0, 0x0d, 0xe1,
	0x51, 0x76, 0x4e, 0x8f, 0x3f, 0x9d, 0xc8, 0x29, 0xe7, 0xb8, 0x92, 0x8b, 0x1e, 0x42, 0x9b, 0x46,
	0x97, 0x98, 0xd0, 0xe0, 0x72, 0xed, 0x13, 0x3c, 0xe7, 0x81, 0x56, 0xdc, 0xd6, 0x0e, 0x9c, 0xe2,
	0xb9, 0xf1, 0x06, 0xda, 0x66, 0x18, 0x8e, 0xe2, 0x85, 0x8b, 0x7f, 0xdb, 0x60, 0x42, 0xd1, 0x77,
	0xa0, 0xd2, 0xac, 0x8c, 0xb2, 0x0a, 0x7a, 0xc1, 0x61, 0xae, 0xcc, 0x6e, 0x9e, 0x6c, 0x3c, 0x81,
	0x4e, 0x6a, 0x8c, 0xac, 0xe3, 0x15, 0xc1, 0xe8, 0x01, 0xb4, 0x76, 0xc5, 0xcd, 0xba, 0x4a, 0xdd,
	0x61, 0x76, 0x68, 0xfc, 0x51, 0x82, 0xca, 0x28, 0x5e, 0xa0, 0x63, 0x50, 0x76, 0x91, 0xf1, 0x6c,
	0x55, 0xdc, 0x0c, 0x40, 0x08, 0xaa, 0xef, 0x03, 0xf2, 0x5e, 0x1a, 0xe0, 0xdf, 0xe8, 0x08, 0x94,
	0x75, 0x82, 0x3f, 0xf8, 0x5c, 0x20, 0x32, 0xd6, 0x64, 0xc0, 0x6b, 0x26, 0x3c, 0x65, 0x4d, 0xc1,
	0x2b, 0x27, 0x4b, 0xfb, 0xf9, 0x3b, 0xa4, 0x44, 0xc3, 0x83, 0xea, 0x28, 0x5e, 0x10, 0xf4, 0x08,
	0xaa, 0xcb, 0x78, 0x41, 0xf4, 0x52, 0xaf, 0xd2, 0x57, 0x4f, 0xb5, 0x82, 0x22, 0xbb, 0x1d, 0x97,
	0xa2, 0xaf, 0xa0, 0xbb, 0xc2, 0x1f, 0xa9, 0xbf, 0x0e, 0x16, 0xd8, 0xa7, 0xf1, 0xaf, 0x58, 0x64,
	0xab, 0xe6, 0xb6, 0x19, 0x3c, 0x09, 0x16, 0xd8, 0x63, 0xa0, 0xf1, 0x77, 0x15, 0xea, 0xaf, 0xa2,
	0x25, 0xc5, 0x09, 0x2b, 0xf0, 0x3b, 0xfe, 0xc5, 0x2f, 0xd8, 0x74, 0xe5, 0x09, 0xdd, 0x81, 0xc6,
	0x6c, 0xeb, 0x87, 0x01, 0xc5, 0xdc, 0x44, 0xd3, 0xad, 0xcf, 0xb6, 0xc3, 0x80, 0x62, 0x74, 0x0f,
	0x80, 0xd0, 0x20, 0xa1, 0x42, 0x26, 0xee, 0xa8, 0x70, 0x84, 0x8b, 0xef, 0x42, 0x13, 0xaf, 0x42,
	0x21, 0xac, 0x8a, 0x5e, 0xc2, 0xab, 0x90, 0x8b, 0x1e, 0x40, 0x6b, 0xb6, 0xf5, 0xb3, 0x11, 0xac,
	0x71, 0xbb, 0xea, 0x6c, 0x9b, 0x35, 0xe6, 0x33, 0x80, 0x9d, 0x9c, 0xe8, 0xf5, 0x5e, 0xe5, 0x0b,
	0x33, 0x9a, 0x63, 0xa2, 0x3e, 0x68, 0xb3, 0xad, 0x2f, 0xa7, 0xcf, 0x17, 0xbb, 0xa5, 0xc1, 0xcd,
	0x77, 0x66, 0xdb, 0x81, 0x80, 0xf9, 0xe8, 0xa0, 0xe7, 0xd0, 0x29, 0xd0, 0x88, 0xde, 0xe4, 0x5e,
	0x3e, 0xb5, 0x83, 0xda, 0xf3, 0x9c, 0x26, 0x41, 0x06, 0xb4, 0x73, 0x4e, 0xa2, 0x50, 0x57, 0xd2,
	0x0b, 0x48, 0x0f, 0x62, 0x29, 0x65, 0x04, 0xa2, 0x43, 0xaf, 0xc2, 0x96, 0xd2, 0x3c, 0x95, 0xa7,
	0x46, 0xe4, 0xc8, 0x33, 0x23, 0x6a, 0x6a, 0x64, 0x22, 0x30, 0x61, 0x24, 0x23, 0x10, 0xbd, 0x25,
	0x8c, 0xac, 0x53, 0x39, 0x41, 0xdf, 0x02, 0x62, 0x99, 0xcc, 0x4d, 0x3f, 0xb3, 0xd4, 0xe6, 0x96,
	0xb4, 0xd9, 0x76, 0x9c, 0x13, 0xd8, 0x21, 0xfa, 0x1a, 0xb4, 0x3d, 0x2a, 0xd1, 0x3b, 0xdc, 0x66,
	0x37, 0x2e, 0x30, 0x89, 0x71, 0x05, 0xdd, 0x51, 0x44, 0x28, 0x6b, 0xb9, 0x74, 0xfa, 0xee, 0x01,
	0xe4, 0xda, 0xa9, 0xc4, 0xdb, 0x49, 0x59, 0xa7, 0xad, 0xc4, 0x3b, 0x9e, 0x89, 0x49, 0x74, 0x85,
	0x65, 0xb3, 0x35, 0x19, 0x30, 0x8d, 0xae, 0x30, 0xfa, 0x66, 0xd7, 0x5c, 0x62, 0x0b, 0xde, 0x2a,
	0x24, 0x59, 0x74, 0x60, 0xda, 0x71, 0xc6, 0x43, 0x68, 0x9f, 0x61, 0x9a, 0x9b, 0xfb, 0x74, 0xc0,
	0x4a, 0xd9, 0x80, 0x19, 0xdf, 0xc3, 0x81, 0xb9, 0xa1, 0xef, 0xe3, 0x24, 0xba, 0xc2, 0x83, 0x25,
	0xcb, 0x47, 0xca, 0x7e, 0x04, 0x1d, 0xb2, 0x59, 0xe3, 0xc4, 0x0f, 0xc2, 0xcb, 0x88, 0xe7, 0x43,
	0xe8, 0xb5, 0x38, 0x6a, 0x32, 0xd0, 0x0e, 0x8d, 0x67, 0x70, 0xe7, 0x9a, 0xbe, 0x5c, 0x0c, 0x47,
	0xa0, 0xcc, 0x97, 0x69, 0x55, 0x84, 0x6e, 0x53, 0x00, 0x76, 0x68, 0x1c, 0xc0, 0x6d, 0x16, 0x1c,
	0x0f, 0x9c, 0x2d, 0x35, 0xe9, 0xd5, 0xf8, 0xb7, 0x04, 0x6a, 0x86, 0xf2, 0xf2, 0xd2, 0x98, 0x06,
	0x4b, 0x9f, 0x7e, 0xf4, 0xe5, 0xc0, 0xb2, 0xb5, 0xa1, 0x72, 0xd0, 0xfb, 0xc8, 0x67, 0xf9, 0x05,
	0x1c, 0x2e, 0x03, 0x42, 0xfd, 0xcd, 0x9a, 0x4d, 0x49, 0xe8, 0x17, 0x57, 0x62, 0x99, 0x2b, 0xdc,
	0x61, 0x8c, 0x0b, 0x41, 0xf0, 0x72, 0xdb, 0x11, 0xbd, 0x84, 0x23, 0xae, 0xfc, 0x01, 0x27, 0xd1,
	0xbb, 0xe8, 0x9a, 0x76, 0x85, 0x6b, 0xeb, 0x8c, 0xf2, 0x56, 0x32, 0x0a, 0xea, 0x7d, 0xd0, 0xb8,
	0x7a, 0xb4, 0x22, 0x38, 0xa1, 0x62, 0x4f, 0x89, 0x31, 0xed, 0x30, 0xdc, 0xe6, 0x30, 0xdf, 0x56,
	0xb7, 0xa1, 0xf6, 0x21, 0x58, 0x46, 0xa1, 0x1c, 0x53, 0x71, 0x78, 0xfc, 0x57, 0x05, 0x94, 0x6c,
	0x5c, 0x01, 0xea, 0x17, 0x6f, 0x9c, 0xf1, 0x8f, 0x8e, 0x76, 0x03, 0xf5, 0xe0, 0xd8, 0x1c, 0x0e,
	0xfd, 0x89, 0xe9, 0xd9, 0x96, 0xe3, 0xf9, 0x9e, 0x6b, 0x99, 0xde, 0x39, 0xfb, 0x72, 0xad, 0xc1,
	0xd8, 0x1d, 0x6a, 0x25, 0x74, 0x0c, 0x7a, 0x9e, 0x71, 0x6e, 0x0d, 0xed, 0x81, 0x39, 0xf2, 0x87,
	0xa6, 0x67, 0x6a, 0x65, 0x74, 0x13, 0xda, 0x4c, 0x6a, 0x3b, 0xd3, 0x0b, 0xd7, 0x74, 0x06, 0x96,
	0x56, 0x41, 0x1a, 0xb4, 0x18, 0xf4, 0x7a, 0x3c, 0x9d, 0xd8, 0x9e, 0x39, 0xd2, 0xaa, 0xe8, 0x21,
	0xdc, 0xbf, 0x98, 0x0c, 0x4d, 0xcf, 0xfa, 0xbc, 0x9f, 0x1a, 0xba, 0x0f, 0x47, 0x7b, 0xa4, 0x82,
	0xab, 0x3a, 0xba, 0x0d, 0x9a, 0x24, 0x64, 0xde, 0x1a, 0xe8, 0x16, 0x74, 0x25, 0xba, 0x73, 0xd8,
	0x64, 0x0e, 0x87, 0xd6, 0xc8, 0xfa, 0x92, 0x43, 0x85, 0x39, 0xdc, 0x23, 0x15, 0x1c, 0x02, 0x73,
	0x28, 0x09, 0x99, 0x43, 0x95, 0x39, 0x94, 0xe8, 0xce, 0x61, 0x8b, 0x51, 0xcf, 0x5c, 0xd3, 0xf1,
	0xfc, 0x89, 0xe5, 0x9e, 0xdb, 0xd3, 0xa9, 0x3d, 0x76, 0xb4, 0x36, 0xcb, 0x84, 0x6b, 0x4d, 0xc6,
	0xae, 0xe7, 0xdb, 0xd3, 0xe9, 0x85, 0xa5, 0x75, 0x90, 0x0a, 0x8d, 0x33, 0xcb, 0xb1, 0x5c, 0x7b,
	0xa0, 0x75, 0x1f, 0xff, 0x02, 0x35, 0xb1, 0xdd, 0x54, 0x68, 0x5c, 0x38, 0x69, 0x45, 0x54, 0x68,
	0xc8, 0x78, 0xb4, 0x12, 0x52, 0xa0, 0x66, 0x0e, 0xcf, 0x6d, 0x47, 0x2b, 0xa3, 0x36, 0x28, 0xf9,
	0x2c, 0xb7, 0xa0, 0x99, 0xcb, 0x70, 0x07, 0xe0, 0x6c, 0xfc, 0xd6, 0x72, 0x1d, 0x76, 0x45, 0xad,
	0x86, 0xba, 0xa0, 0x7a, 0xaf, 0x6d, 0x97, 0x95, 0xcd, 0xf5, 0x7e, 0xd2, 0xea, 0x8f, 0x9f, 0x43,
	0x77, 0xef, 0x79, 0xe7, 0x8e, 0x2c, 0x67, 0x68, 0x3b, 0x67, 0xda, 0x0d, 0x66, 0x7d, 0x30, 0x3e,
	0x9f, 0xb0, 0x7b, 0xb1, 0xa2, 0x03, 0xd4, 0x5f, 0x99, 0xf6, 0xc8, 0x1a, 0x6a, 0xe5, 0xd3, 0x3f,
	0xcb, 0xa0, 0x88, 0x61, 0x31, 0x27, 0x36, 0x32, 0xa1, 0x2e, 0x9e, 0x66, 0x74, 0x58, 0xdc, 0xbd,
	0xf9, 0xc7, 0xff, 0xf0, 0xe8, 0x93, 0x32, 0x39, 0xb2, 0xcf, 0xa0, 0x2e, 0x56, 0xc6, 0x9e, 0x89,
	0xc2, 0x1e, 0x39, 0xbc, 0xf6, 0x5a, 0xa2, 0x17, 0xd0, 0x4c, 0xd7, 0x1c, 0x2a, 0xfe, 0xb9, 0xec,
	0x6d, 0xbf, 0xc3, 0x9b, 0xfb, 0xba, 0x04, 0x8d, 0xc4, 0x9e, 0xda, 0x0d, 0x3d, 0x7a, 0x70, 0xcd,
	0xf7, 0xfe, 0x9a, 0x38, 0x2c, 0xbe, 0xf4, 0xb9, 0x85, 0xf1, 0x43, 0xf3, 0xe7, 0xba, 0x40, 0x67,
	0x75, 0xfe, 0xe3, 0xfc, 0xe4, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x14, 0x7a, 0x33, 0xf5, 0x48,
	0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LedgerAPIClient is the client API for LedgerAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LedgerAPIClient interface {
	// Adds a log into the ledger
	AddLog(ctx context.Context, in *AddLogRequest, opts ...grpc.CallOption) (*AddLogResponse, error)
	// Retrieve a single log
	GetLog(ctx context.Context, in *GetLogRequest, opts ...grpc.CallOption) (*Log, error)
	// Retrieve a colection of logs
	ListLogs(ctx context.Context, in *ListLogsRequest, opts ...grpc.CallOption) (*Logs, error)
	// Retrieve statistics of the ledger
	GetLedgerStat(ctx context.Context, in *GetLedgerStatRequest, opts ...grpc.CallOption) (*LedgerStats, error)
}

type ledgerAPIClient struct {
	cc *grpc.ClientConn
}

func NewLedgerAPIClient(cc *grpc.ClientConn) LedgerAPIClient {
	return &ledgerAPIClient{cc}
}

func (c *ledgerAPIClient) AddLog(ctx context.Context, in *AddLogRequest, opts ...grpc.CallOption) (*AddLogResponse, error) {
	out := new(AddLogResponse)
	err := c.cc.Invoke(ctx, "/umrs.ledger.LedgerAPI/AddLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ledgerAPIClient) GetLog(ctx context.Context, in *GetLogRequest, opts ...grpc.CallOption) (*Log, error) {
	out := new(Log)
	err := c.cc.Invoke(ctx, "/umrs.ledger.LedgerAPI/GetLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ledgerAPIClient) ListLogs(ctx context.Context, in *ListLogsRequest, opts ...grpc.CallOption) (*Logs, error) {
	out := new(Logs)
	err := c.cc.Invoke(ctx, "/umrs.ledger.LedgerAPI/ListLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ledgerAPIClient) GetLedgerStat(ctx context.Context, in *GetLedgerStatRequest, opts ...grpc.CallOption) (*LedgerStats, error) {
	out := new(LedgerStats)
	err := c.cc.Invoke(ctx, "/umrs.ledger.LedgerAPI/GetLedgerStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LedgerAPIServer is the server API for LedgerAPI service.
type LedgerAPIServer interface {
	// Adds a log into the ledger
	AddLog(context.Context, *AddLogRequest) (*AddLogResponse, error)
	// Retrieve a single log
	GetLog(context.Context, *GetLogRequest) (*Log, error)
	// Retrieve a colection of logs
	ListLogs(context.Context, *ListLogsRequest) (*Logs, error)
	// Retrieve statistics of the ledger
	GetLedgerStat(context.Context, *GetLedgerStatRequest) (*LedgerStats, error)
}

func RegisterLedgerAPIServer(s *grpc.Server, srv LedgerAPIServer) {
	s.RegisterService(&_LedgerAPI_serviceDesc, srv)
}

func _LedgerAPI_AddLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LedgerAPIServer).AddLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.ledger.LedgerAPI/AddLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LedgerAPIServer).AddLog(ctx, req.(*AddLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LedgerAPI_GetLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LedgerAPIServer).GetLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.ledger.LedgerAPI/GetLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LedgerAPIServer).GetLog(ctx, req.(*GetLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LedgerAPI_ListLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LedgerAPIServer).ListLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.ledger.LedgerAPI/ListLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LedgerAPIServer).ListLogs(ctx, req.(*ListLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LedgerAPI_GetLedgerStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLedgerStatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LedgerAPIServer).GetLedgerStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.ledger.LedgerAPI/GetLedgerStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LedgerAPIServer).GetLedgerStat(ctx, req.(*GetLedgerStatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LedgerAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "umrs.ledger.LedgerAPI",
	HandlerType: (*LedgerAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddLog",
			Handler:    _LedgerAPI_AddLog_Handler,
		},
		{
			MethodName: "GetLog",
			Handler:    _LedgerAPI_GetLog_Handler,
		},
		{
			MethodName: "ListLogs",
			Handler:    _LedgerAPI_ListLogs_Handler,
		},
		{
			MethodName: "GetLedgerStat",
			Handler:    _LedgerAPI_GetLedgerStat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ledger.proto",
}
