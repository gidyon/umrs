// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hospital.proto

package hospital

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Hospital is a health facility
type Hospital struct {
	HospitalId           string   `protobuf:"bytes,1,opt,name=hospital_id,json=hospitalId,proto3" json:"hospital_id,omitempty"`
	HospitalName         string   `protobuf:"bytes,2,opt,name=hospital_name,json=hospitalName,proto3" json:"hospital_name,omitempty"`
	WebsiteUrl           string   `protobuf:"bytes,3,opt,name=website_url,json=websiteUrl,proto3" json:"website_url,omitempty"`
	LogoUrl              string   `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	County               string   `protobuf:"bytes,5,opt,name=county,proto3" json:"county,omitempty"`
	SubCounty            string   `protobuf:"bytes,6,opt,name=sub_county,json=subCounty,proto3" json:"sub_county,omitempty"`
	AdminEmails          []string `protobuf:"bytes,7,rep,name=admin_emails,json=adminEmails,proto3" json:"admin_emails,omitempty"`
	Permission           bool     `protobuf:"varint,8,opt,name=permission,proto3" json:"permission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hospital) Reset()         { *m = Hospital{} }
func (m *Hospital) String() string { return proto.CompactTextString(m) }
func (*Hospital) ProtoMessage()    {}
func (*Hospital) Descriptor() ([]byte, []int) {
	return fileDescriptor_007177de4d78ec3e, []int{0}
}

func (m *Hospital) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hospital.Unmarshal(m, b)
}
func (m *Hospital) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hospital.Marshal(b, m, deterministic)
}
func (m *Hospital) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hospital.Merge(m, src)
}
func (m *Hospital) XXX_Size() int {
	return xxx_messageInfo_Hospital.Size(m)
}
func (m *Hospital) XXX_DiscardUnknown() {
	xxx_messageInfo_Hospital.DiscardUnknown(m)
}

var xxx_messageInfo_Hospital proto.InternalMessageInfo

func (m *Hospital) GetHospitalId() string {
	if m != nil {
		return m.HospitalId
	}
	return ""
}

func (m *Hospital) GetHospitalName() string {
	if m != nil {
		return m.HospitalName
	}
	return ""
}

func (m *Hospital) GetWebsiteUrl() string {
	if m != nil {
		return m.WebsiteUrl
	}
	return ""
}

func (m *Hospital) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

func (m *Hospital) GetCounty() string {
	if m != nil {
		return m.County
	}
	return ""
}

func (m *Hospital) GetSubCounty() string {
	if m != nil {
		return m.SubCounty
	}
	return ""
}

func (m *Hospital) GetAdminEmails() []string {
	if m != nil {
		return m.AdminEmails
	}
	return nil
}

func (m *Hospital) GetPermission() bool {
	if m != nil {
		return m.Permission
	}
	return false
}

// AddHospitalRequest is request to add a new hospital
type AddHospitalRequest struct {
	Hospital             *Hospital `protobuf:"bytes,1,opt,name=hospital,proto3" json:"hospital,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AddHospitalRequest) Reset()         { *m = AddHospitalRequest{} }
func (m *AddHospitalRequest) String() string { return proto.CompactTextString(m) }
func (*AddHospitalRequest) ProtoMessage()    {}
func (*AddHospitalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_007177de4d78ec3e, []int{1}
}

func (m *AddHospitalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddHospitalRequest.Unmarshal(m, b)
}
func (m *AddHospitalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddHospitalRequest.Marshal(b, m, deterministic)
}
func (m *AddHospitalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddHospitalRequest.Merge(m, src)
}
func (m *AddHospitalRequest) XXX_Size() int {
	return xxx_messageInfo_AddHospitalRequest.Size(m)
}
func (m *AddHospitalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddHospitalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddHospitalRequest proto.InternalMessageInfo

func (m *AddHospitalRequest) GetHospital() *Hospital {
	if m != nil {
		return m.Hospital
	}
	return nil
}

// HashResponse is response after mutating a hospital
type HashResponse struct {
	HospitalId           string   `protobuf:"bytes,1,opt,name=hospital_id,json=hospitalId,proto3" json:"hospital_id,omitempty"`
	OperationHash        string   `protobuf:"bytes,2,opt,name=operation_hash,json=operationHash,proto3" json:"operation_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashResponse) Reset()         { *m = HashResponse{} }
func (m *HashResponse) String() string { return proto.CompactTextString(m) }
func (*HashResponse) ProtoMessage()    {}
func (*HashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_007177de4d78ec3e, []int{2}
}

func (m *HashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashResponse.Unmarshal(m, b)
}
func (m *HashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashResponse.Marshal(b, m, deterministic)
}
func (m *HashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashResponse.Merge(m, src)
}
func (m *HashResponse) XXX_Size() int {
	return xxx_messageInfo_HashResponse.Size(m)
}
func (m *HashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HashResponse proto.InternalMessageInfo

func (m *HashResponse) GetHospitalId() string {
	if m != nil {
		return m.HospitalId
	}
	return ""
}

func (m *HashResponse) GetOperationHash() string {
	if m != nil {
		return m.OperationHash
	}
	return ""
}

// GetHospitalRequest is request to get a hospital resource
type GetHospitalRequest struct {
	HospitalId           string   `protobuf:"bytes,1,opt,name=hospital_id,json=hospitalId,proto3" json:"hospital_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHospitalRequest) Reset()         { *m = GetHospitalRequest{} }
func (m *GetHospitalRequest) String() string { return proto.CompactTextString(m) }
func (*GetHospitalRequest) ProtoMessage()    {}
func (*GetHospitalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_007177de4d78ec3e, []int{3}
}

func (m *GetHospitalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHospitalRequest.Unmarshal(m, b)
}
func (m *GetHospitalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHospitalRequest.Marshal(b, m, deterministic)
}
func (m *GetHospitalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHospitalRequest.Merge(m, src)
}
func (m *GetHospitalRequest) XXX_Size() int {
	return xxx_messageInfo_GetHospitalRequest.Size(m)
}
func (m *GetHospitalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHospitalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHospitalRequest proto.InternalMessageInfo

func (m *GetHospitalRequest) GetHospitalId() string {
	if m != nil {
		return m.HospitalId
	}
	return ""
}

// DeleteHospitalRequest is request to delete a hospital resource
type DeleteHospitalRequest struct {
	HospitalId           string   `protobuf:"bytes,1,opt,name=hospital_id,json=hospitalId,proto3" json:"hospital_id,omitempty"`
	HospitalName         string   `protobuf:"bytes,2,opt,name=hospital_name,json=hospitalName,proto3" json:"hospital_name,omitempty"`
	Reason               string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteHospitalRequest) Reset()         { *m = DeleteHospitalRequest{} }
func (m *DeleteHospitalRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteHospitalRequest) ProtoMessage()    {}
func (*DeleteHospitalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_007177de4d78ec3e, []int{4}
}

func (m *DeleteHospitalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteHospitalRequest.Unmarshal(m, b)
}
func (m *DeleteHospitalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteHospitalRequest.Marshal(b, m, deterministic)
}
func (m *DeleteHospitalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteHospitalRequest.Merge(m, src)
}
func (m *DeleteHospitalRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteHospitalRequest.Size(m)
}
func (m *DeleteHospitalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteHospitalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteHospitalRequest proto.InternalMessageInfo

func (m *DeleteHospitalRequest) GetHospitalId() string {
	if m != nil {
		return m.HospitalId
	}
	return ""
}

func (m *DeleteHospitalRequest) GetHospitalName() string {
	if m != nil {
		return m.HospitalName
	}
	return ""
}

func (m *DeleteHospitalRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

// UpdateHospitalRequest is request to update a hospital resource
type UpdateHospitalRequest struct {
	HospitalId           string    `protobuf:"bytes,1,opt,name=hospital_id,json=hospitalId,proto3" json:"hospital_id,omitempty"`
	Hospital             *Hospital `protobuf:"bytes,2,opt,name=hospital,proto3" json:"hospital,omitempty"`
	Suspend              bool      `protobuf:"varint,3,opt,name=suspend,proto3" json:"suspend,omitempty"`
	Reason               string    `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateHospitalRequest) Reset()         { *m = UpdateHospitalRequest{} }
func (m *UpdateHospitalRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateHospitalRequest) ProtoMessage()    {}
func (*UpdateHospitalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_007177de4d78ec3e, []int{5}
}

func (m *UpdateHospitalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHospitalRequest.Unmarshal(m, b)
}
func (m *UpdateHospitalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHospitalRequest.Marshal(b, m, deterministic)
}
func (m *UpdateHospitalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHospitalRequest.Merge(m, src)
}
func (m *UpdateHospitalRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateHospitalRequest.Size(m)
}
func (m *UpdateHospitalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHospitalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHospitalRequest proto.InternalMessageInfo

func (m *UpdateHospitalRequest) GetHospitalId() string {
	if m != nil {
		return m.HospitalId
	}
	return ""
}

func (m *UpdateHospitalRequest) GetHospital() *Hospital {
	if m != nil {
		return m.Hospital
	}
	return nil
}

func (m *UpdateHospitalRequest) GetSuspend() bool {
	if m != nil {
		return m.Suspend
	}
	return false
}

func (m *UpdateHospitalRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

// ListHospitalsRequest is request to get collection of hospitals
type ListHospitalsRequest struct {
	PageNumber           int32    `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListHospitalsRequest) Reset()         { *m = ListHospitalsRequest{} }
func (m *ListHospitalsRequest) String() string { return proto.CompactTextString(m) }
func (*ListHospitalsRequest) ProtoMessage()    {}
func (*ListHospitalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_007177de4d78ec3e, []int{6}
}

func (m *ListHospitalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListHospitalsRequest.Unmarshal(m, b)
}
func (m *ListHospitalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListHospitalsRequest.Marshal(b, m, deterministic)
}
func (m *ListHospitalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListHospitalsRequest.Merge(m, src)
}
func (m *ListHospitalsRequest) XXX_Size() int {
	return xxx_messageInfo_ListHospitalsRequest.Size(m)
}
func (m *ListHospitalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListHospitalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListHospitalsRequest proto.InternalMessageInfo

func (m *ListHospitalsRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *ListHospitalsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// SearchHospitalsRequest is request to search for hospitals
type SearchHospitalsRequest struct {
	PageNumber           int32    `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Query                string   `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchHospitalsRequest) Reset()         { *m = SearchHospitalsRequest{} }
func (m *SearchHospitalsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchHospitalsRequest) ProtoMessage()    {}
func (*SearchHospitalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_007177de4d78ec3e, []int{7}
}

func (m *SearchHospitalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchHospitalsRequest.Unmarshal(m, b)
}
func (m *SearchHospitalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchHospitalsRequest.Marshal(b, m, deterministic)
}
func (m *SearchHospitalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchHospitalsRequest.Merge(m, src)
}
func (m *SearchHospitalsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchHospitalsRequest.Size(m)
}
func (m *SearchHospitalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchHospitalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchHospitalsRequest proto.InternalMessageInfo

func (m *SearchHospitalsRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *SearchHospitalsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchHospitalsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

// Hospitals is collection of hospitals
type Hospitals struct {
	Hospitals            []*Hospital `protobuf:"bytes,1,rep,name=hospitals,proto3" json:"hospitals,omitempty"`
	NextPageNumber       string      `protobuf:"bytes,2,opt,name=next_page_number,json=nextPageNumber,proto3" json:"next_page_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Hospitals) Reset()         { *m = Hospitals{} }
func (m *Hospitals) String() string { return proto.CompactTextString(m) }
func (*Hospitals) ProtoMessage()    {}
func (*Hospitals) Descriptor() ([]byte, []int) {
	return fileDescriptor_007177de4d78ec3e, []int{8}
}

func (m *Hospitals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hospitals.Unmarshal(m, b)
}
func (m *Hospitals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hospitals.Marshal(b, m, deterministic)
}
func (m *Hospitals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hospitals.Merge(m, src)
}
func (m *Hospitals) XXX_Size() int {
	return xxx_messageInfo_Hospitals.Size(m)
}
func (m *Hospitals) XXX_DiscardUnknown() {
	xxx_messageInfo_Hospitals.DiscardUnknown(m)
}

var xxx_messageInfo_Hospitals proto.InternalMessageInfo

func (m *Hospitals) GetHospitals() []*Hospital {
	if m != nil {
		return m.Hospitals
	}
	return nil
}

func (m *Hospitals) GetNextPageNumber() string {
	if m != nil {
		return m.NextPageNumber
	}
	return ""
}

// CheckSuspensionRequest is request to check whether a hospital is suspended
type CheckSuspensionRequest struct {
	HospitalId           string   `protobuf:"bytes,1,opt,name=hospital_id,json=hospitalId,proto3" json:"hospital_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckSuspensionRequest) Reset()         { *m = CheckSuspensionRequest{} }
func (m *CheckSuspensionRequest) String() string { return proto.CompactTextString(m) }
func (*CheckSuspensionRequest) ProtoMessage()    {}
func (*CheckSuspensionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_007177de4d78ec3e, []int{9}
}

func (m *CheckSuspensionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckSuspensionRequest.Unmarshal(m, b)
}
func (m *CheckSuspensionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckSuspensionRequest.Marshal(b, m, deterministic)
}
func (m *CheckSuspensionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckSuspensionRequest.Merge(m, src)
}
func (m *CheckSuspensionRequest) XXX_Size() int {
	return xxx_messageInfo_CheckSuspensionRequest.Size(m)
}
func (m *CheckSuspensionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckSuspensionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckSuspensionRequest proto.InternalMessageInfo

func (m *CheckSuspensionRequest) GetHospitalId() string {
	if m != nil {
		return m.HospitalId
	}
	return ""
}

// CheckSuspensionResponse is result after checking whether a hospital is suspended
type CheckSuspensionResponse struct {
	Suspended            bool     `protobuf:"varint,1,opt,name=suspended,proto3" json:"suspended,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckSuspensionResponse) Reset()         { *m = CheckSuspensionResponse{} }
func (m *CheckSuspensionResponse) String() string { return proto.CompactTextString(m) }
func (*CheckSuspensionResponse) ProtoMessage()    {}
func (*CheckSuspensionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_007177de4d78ec3e, []int{10}
}

func (m *CheckSuspensionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckSuspensionResponse.Unmarshal(m, b)
}
func (m *CheckSuspensionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckSuspensionResponse.Marshal(b, m, deterministic)
}
func (m *CheckSuspensionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckSuspensionResponse.Merge(m, src)
}
func (m *CheckSuspensionResponse) XXX_Size() int {
	return xxx_messageInfo_CheckSuspensionResponse.Size(m)
}
func (m *CheckSuspensionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckSuspensionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckSuspensionResponse proto.InternalMessageInfo

func (m *CheckSuspensionResponse) GetSuspended() bool {
	if m != nil {
		return m.Suspended
	}
	return false
}

func init() {
	proto.RegisterType((*Hospital)(nil), "umrs.hospital.Hospital")
	proto.RegisterType((*AddHospitalRequest)(nil), "umrs.hospital.AddHospitalRequest")
	proto.RegisterType((*HashResponse)(nil), "umrs.hospital.HashResponse")
	proto.RegisterType((*GetHospitalRequest)(nil), "umrs.hospital.GetHospitalRequest")
	proto.RegisterType((*DeleteHospitalRequest)(nil), "umrs.hospital.DeleteHospitalRequest")
	proto.RegisterType((*UpdateHospitalRequest)(nil), "umrs.hospital.UpdateHospitalRequest")
	proto.RegisterType((*ListHospitalsRequest)(nil), "umrs.hospital.ListHospitalsRequest")
	proto.RegisterType((*SearchHospitalsRequest)(nil), "umrs.hospital.SearchHospitalsRequest")
	proto.RegisterType((*Hospitals)(nil), "umrs.hospital.Hospitals")
	proto.RegisterType((*CheckSuspensionRequest)(nil), "umrs.hospital.CheckSuspensionRequest")
	proto.RegisterType((*CheckSuspensionResponse)(nil), "umrs.hospital.CheckSuspensionResponse")
}

func init() { proto.RegisterFile("hospital.proto", fileDescriptor_007177de4d78ec3e) }

var fileDescriptor_007177de4d78ec3e = []byte{
	// 788 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcf, 0x4f, 0xdb, 0x48,
	0x14, 0x96, 0x03, 0x49, 0x9c, 0x17, 0x12, 0x56, 0x23, 0x08, 0x5e, 0xc3, 0x2e, 0x89, 0x59, 0xd8,
	0x2c, 0x82, 0x44, 0x82, 0x45, 0xab, 0xe5, 0x46, 0x29, 0x2a, 0x48, 0x15, 0x42, 0xa6, 0xf4, 0xd0,
	0x4b, 0x34, 0x89, 0x87, 0xc4, 0xaa, 0xed, 0x31, 0x1e, 0x5b, 0x34, 0x54, 0x1c, 0xda, 0x43, 0x4f,
	0xbd, 0xf5, 0x5a, 0xa9, 0x7f, 0x54, 0xff, 0x85, 0xfe, 0x21, 0x95, 0xc7, 0x3f, 0x70, 0x1c, 0x93,
	0xa4, 0x55, 0x4f, 0xd1, 0x7c, 0xef, 0xcd, 0xfb, 0xbe, 0x7c, 0xcf, 0xdf, 0x40, 0x75, 0x40, 0x99,
	0xad, 0xbb, 0xd8, 0x68, 0xd9, 0x0e, 0x75, 0x29, 0xaa, 0x98, 0xbd, 0x6b, 0xbb, 0x15, 0x81, 0xf2,
	0x5a, 0x9f, 0xd2, 0xbe, 0x41, 0xda, 0xd8, 0xd6, 0xdb, 0xd8, 0xb2, 0xa8, 0x8b, 0x5d, 0x9d, 0x5a,
	0x2c, 0x68, 0x96, 0x77, 0xf8, 0x4f, 0x6f, 0xb7, 0x4f, 0xac, 0x5d, 0x76, 0x8b, 0xfb, 0x7d, 0xe2,
	0xb4, 0xa9, 0xcd, 0x3b, 0x32, 0xba, 0x57, 0xc3, 0x59, 0xfc, 0xd4, 0xf5, 0xae, 0xdb, 0xc4, 0xb4,
	0xdd, 0x61, 0x50, 0x54, 0x3e, 0xe4, 0x40, 0x3c, 0x0d, 0x59, 0xd1, 0x3a, 0x94, 0x23, 0x05, 0x1d,
	0x5d, 0x93, 0x84, 0xba, 0xd0, 0x2c, 0xa9, 0x10, 0x41, 0x67, 0x1a, 0xda, 0x80, 0x4a, 0xdc, 0x60,
	0x61, 0x93, 0x48, 0x39, 0xde, 0xb2, 0x10, 0x81, 0xe7, 0xd8, 0x24, 0xfe, 0x94, 0x5b, 0xd2, 0x65,
	0xba, 0x4b, 0x3a, 0x9e, 0x63, 0x48, 0x73, 0xc1, 0x94, 0x10, 0xba, 0x72, 0x0c, 0xf4, 0x3b, 0x88,
	0x06, 0xed, 0x53, 0x5e, 0x9d, 0xe7, 0xd5, 0xa2, 0x7f, 0xf6, 0x4b, 0x35, 0x28, 0xf4, 0xa8, 0x67,
	0xb9, 0x43, 0x29, 0xcf, 0x0b, 0xe1, 0x09, 0xfd, 0x01, 0xc0, 0xbc, 0x6e, 0x27, 0xac, 0x15, 0x78,
	0xad, 0xc4, 0xbc, 0xee, 0x71, 0x50, 0x6e, 0xc0, 0x02, 0xd6, 0x4c, 0xdd, 0xea, 0x10, 0x13, 0xeb,
	0x06, 0x93, 0x8a, 0xf5, 0xb9, 0x66, 0x49, 0x2d, 0x73, 0xec, 0x84, 0x43, 0xe8, 0x4f, 0x00, 0x9b,
	0x38, 0xa6, 0xce, 0x98, 0x4e, 0x2d, 0x49, 0xac, 0x0b, 0x4d, 0x51, 0x4d, 0x20, 0xca, 0x19, 0xa0,
	0x23, 0x4d, 0x8b, 0xac, 0x50, 0xc9, 0x8d, 0x47, 0x98, 0x8b, 0xf6, 0x41, 0x8c, 0xfe, 0x1b, 0xb7,
	0xa3, 0xbc, 0xb7, 0xd2, 0x1a, 0xd9, 0x54, 0x2b, 0xbe, 0x11, 0x37, 0x2a, 0x2f, 0x61, 0xe1, 0x14,
	0xb3, 0x81, 0x4a, 0x98, 0x4d, 0x2d, 0x46, 0xa6, 0xdb, 0xba, 0x09, 0x55, 0x6a, 0x13, 0x87, 0x6f,
	0xad, 0x33, 0xc0, 0x6c, 0x10, 0xfa, 0x5a, 0x89, 0x51, 0x7f, 0x9e, 0x72, 0x00, 0xe8, 0x19, 0x71,
	0xd3, 0x12, 0xa7, 0x4d, 0x57, 0x3c, 0x58, 0x7e, 0x4a, 0x0c, 0xe2, 0x92, 0x1f, 0xbd, 0x39, 0xdb,
	0xba, 0x6b, 0x50, 0x70, 0x08, 0x66, 0xd4, 0x0a, 0x37, 0x1d, 0x9e, 0x94, 0x2f, 0x02, 0x2c, 0x5f,
	0xd9, 0x1a, 0xfe, 0x09, 0xde, 0xa4, 0xeb, 0xb9, 0x19, 0x5d, 0x47, 0x12, 0x14, 0x99, 0xc7, 0x6c,
	0x62, 0x69, 0x5c, 0x88, 0xa8, 0x46, 0xc7, 0x84, 0xc2, 0xf9, 0x11, 0x85, 0x2f, 0x60, 0xe9, 0xb9,
	0xce, 0x62, 0x43, 0x59, 0x42, 0x9f, 0x8d, 0xfb, 0xa4, 0x63, 0x79, 0x66, 0x97, 0x38, 0x5c, 0x5f,
	0x5e, 0x05, 0x1f, 0x3a, 0xe7, 0x08, 0x5a, 0x85, 0x12, 0x6f, 0x60, 0xfa, 0x5d, 0xe0, 0x49, 0x5e,
	0x15, 0x7d, 0xe0, 0x52, 0xbf, 0x23, 0x8a, 0x01, 0xb5, 0x4b, 0x82, 0x9d, 0xde, 0xe0, 0xd7, 0xce,
	0x45, 0x4b, 0x90, 0xbf, 0xf1, 0x88, 0x33, 0x0c, 0x6d, 0x0e, 0x0e, 0x8a, 0x01, 0xa5, 0x98, 0x07,
	0x1d, 0x40, 0x29, 0xb2, 0x83, 0x49, 0x42, 0x7d, 0x6e, 0x92, 0x71, 0x0f, 0x9d, 0xa8, 0x09, 0xbf,
	0x59, 0xe4, 0x8d, 0xdb, 0x49, 0x8a, 0x0b, 0x36, 0x5d, 0xf5, 0xf1, 0x8b, 0x58, 0xa0, 0xf2, 0x3f,
	0xd4, 0x8e, 0x07, 0xa4, 0xf7, 0xfa, 0x92, 0x3b, 0xeb, 0xe7, 0x66, 0xe6, 0xaf, 0xf0, 0x3f, 0x58,
	0x19, 0xbb, 0x1a, 0xe6, 0x63, 0x0d, 0x4a, 0xe1, 0xaa, 0x48, 0x70, 0x53, 0x54, 0x1f, 0x80, 0xbd,
	0x8f, 0x45, 0x28, 0x47, 0xaa, 0x8f, 0x2e, 0xce, 0xd0, 0x0d, 0x94, 0x13, 0x41, 0x45, 0x8d, 0xd4,
	0x1f, 0x1c, 0x0f, 0xb1, 0xbc, 0x9a, 0xf6, 0x20, 0x11, 0x4e, 0x45, 0x79, 0xff, 0xf5, 0xdb, 0xa7,
	0xdc, 0x9a, 0xb2, 0xc2, 0xdf, 0x5a, 0xbf, 0xb1, 0x1d, 0x3b, 0xd3, 0xc6, 0x9a, 0x76, 0x28, 0x6c,
	0x23, 0x17, 0xca, 0x89, 0xe0, 0x8d, 0x51, 0x8e, 0x87, 0x52, 0x7e, 0xcc, 0x76, 0xe5, 0x1f, 0x4e,
	0xb7, 0x81, 0x1a, 0x59, 0x74, 0x6f, 0x13, 0x16, 0xde, 0xa3, 0x21, 0x54, 0x47, 0x73, 0x8b, 0xfe,
	0x4a, 0x4d, 0xcd, 0x8c, 0xb5, 0x5c, 0x6b, 0x05, 0x0f, 0x7e, 0x2b, 0x7a, 0xf0, 0x5b, 0x27, 0xfe,
	0x83, 0x1f, 0x51, 0x6f, 0xcf, 0x40, 0xfd, 0x4e, 0x80, 0xea, 0x68, 0x76, 0xc7, 0xb8, 0x33, 0xa3,
	0x3d, 0xd9, 0xea, 0x1d, 0x2e, 0x60, 0x4b, 0x9e, 0x2e, 0xc0, 0x37, 0xfd, 0x16, 0x2a, 0x23, 0xe9,
	0x44, 0x1b, 0xa9, 0xd9, 0x59, 0xd9, 0x95, 0xa5, 0x47, 0x8c, 0x67, 0xca, 0xdf, 0x9c, 0xbd, 0x81,
	0xd6, 0x33, 0x17, 0xdd, 0xf3, 0x5f, 0xd9, 0xb6, 0xa1, 0x33, 0x17, 0xdd, 0xc3, 0x62, 0x2a, 0xc0,
	0x68, 0x33, 0x35, 0x35, 0x3b, 0xe0, 0x13, 0xc8, 0x27, 0xae, 0x3d, 0x24, 0x67, 0x7c, 0x28, 0xfa,
	0x2c, 0xc0, 0x62, 0x2a, 0x29, 0x63, 0xfc, 0xd9, 0x21, 0x94, 0xb7, 0xa6, 0xb5, 0x85, 0x8b, 0x38,
	0xe4, 0x6a, 0xfe, 0x45, 0x7b, 0x93, 0xd4, 0x44, 0x01, 0x1c, 0xdd, 0xcc, 0x13, 0x78, 0x15, 0x3f,
	0xb9, 0xdd, 0x02, 0xff, 0xc2, 0xf6, 0xbf, 0x07, 0x00, 0x00, 0xff, 0xff, 0x88, 0xd6, 0x31, 0xaa,
	0xcd, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HospitalAPIClient is the client API for HospitalAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HospitalAPIClient interface {
	// Adds a hospital to the network of hospitals
	AddHospital(ctx context.Context, in *AddHospitalRequest, opts ...grpc.CallOption) (*HashResponse, error)
	// Retrieves a single hospital resource
	GetHospital(ctx context.Context, in *GetHospitalRequest, opts ...grpc.CallOption) (*Hospital, error)
	// Removes a hospital from network of hospitals
	DeleteHospital(ctx context.Context, in *DeleteHospitalRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Updates a hospital resource
	UpdateHospital(ctx context.Context, in *UpdateHospitalRequest, opts ...grpc.CallOption) (*HashResponse, error)
	// Fetches a collection of hospitals
	ListHospitals(ctx context.Context, in *ListHospitalsRequest, opts ...grpc.CallOption) (*Hospitals, error)
	// Searches for hospitals resource
	SearchHospitals(ctx context.Context, in *SearchHospitalsRequest, opts ...grpc.CallOption) (*Hospitals, error)
	// Checks whether a hospital is suspended
	CheckSuspension(ctx context.Context, in *CheckSuspensionRequest, opts ...grpc.CallOption) (*CheckSuspensionResponse, error)
}

type hospitalAPIClient struct {
	cc *grpc.ClientConn
}

func NewHospitalAPIClient(cc *grpc.ClientConn) HospitalAPIClient {
	return &hospitalAPIClient{cc}
}

func (c *hospitalAPIClient) AddHospital(ctx context.Context, in *AddHospitalRequest, opts ...grpc.CallOption) (*HashResponse, error) {
	out := new(HashResponse)
	err := c.cc.Invoke(ctx, "/umrs.hospital.HospitalAPI/AddHospital", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hospitalAPIClient) GetHospital(ctx context.Context, in *GetHospitalRequest, opts ...grpc.CallOption) (*Hospital, error) {
	out := new(Hospital)
	err := c.cc.Invoke(ctx, "/umrs.hospital.HospitalAPI/GetHospital", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hospitalAPIClient) DeleteHospital(ctx context.Context, in *DeleteHospitalRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/umrs.hospital.HospitalAPI/DeleteHospital", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hospitalAPIClient) UpdateHospital(ctx context.Context, in *UpdateHospitalRequest, opts ...grpc.CallOption) (*HashResponse, error) {
	out := new(HashResponse)
	err := c.cc.Invoke(ctx, "/umrs.hospital.HospitalAPI/UpdateHospital", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hospitalAPIClient) ListHospitals(ctx context.Context, in *ListHospitalsRequest, opts ...grpc.CallOption) (*Hospitals, error) {
	out := new(Hospitals)
	err := c.cc.Invoke(ctx, "/umrs.hospital.HospitalAPI/ListHospitals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hospitalAPIClient) SearchHospitals(ctx context.Context, in *SearchHospitalsRequest, opts ...grpc.CallOption) (*Hospitals, error) {
	out := new(Hospitals)
	err := c.cc.Invoke(ctx, "/umrs.hospital.HospitalAPI/SearchHospitals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hospitalAPIClient) CheckSuspension(ctx context.Context, in *CheckSuspensionRequest, opts ...grpc.CallOption) (*CheckSuspensionResponse, error) {
	out := new(CheckSuspensionResponse)
	err := c.cc.Invoke(ctx, "/umrs.hospital.HospitalAPI/CheckSuspension", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HospitalAPIServer is the server API for HospitalAPI service.
type HospitalAPIServer interface {
	// Adds a hospital to the network of hospitals
	AddHospital(context.Context, *AddHospitalRequest) (*HashResponse, error)
	// Retrieves a single hospital resource
	GetHospital(context.Context, *GetHospitalRequest) (*Hospital, error)
	// Removes a hospital from network of hospitals
	DeleteHospital(context.Context, *DeleteHospitalRequest) (*empty.Empty, error)
	// Updates a hospital resource
	UpdateHospital(context.Context, *UpdateHospitalRequest) (*HashResponse, error)
	// Fetches a collection of hospitals
	ListHospitals(context.Context, *ListHospitalsRequest) (*Hospitals, error)
	// Searches for hospitals resource
	SearchHospitals(context.Context, *SearchHospitalsRequest) (*Hospitals, error)
	// Checks whether a hospital is suspended
	CheckSuspension(context.Context, *CheckSuspensionRequest) (*CheckSuspensionResponse, error)
}

func RegisterHospitalAPIServer(s *grpc.Server, srv HospitalAPIServer) {
	s.RegisterService(&_HospitalAPI_serviceDesc, srv)
}

func _HospitalAPI_AddHospital_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddHospitalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HospitalAPIServer).AddHospital(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.hospital.HospitalAPI/AddHospital",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HospitalAPIServer).AddHospital(ctx, req.(*AddHospitalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HospitalAPI_GetHospital_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHospitalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HospitalAPIServer).GetHospital(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.hospital.HospitalAPI/GetHospital",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HospitalAPIServer).GetHospital(ctx, req.(*GetHospitalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HospitalAPI_DeleteHospital_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteHospitalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HospitalAPIServer).DeleteHospital(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.hospital.HospitalAPI/DeleteHospital",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HospitalAPIServer).DeleteHospital(ctx, req.(*DeleteHospitalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HospitalAPI_UpdateHospital_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHospitalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HospitalAPIServer).UpdateHospital(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.hospital.HospitalAPI/UpdateHospital",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HospitalAPIServer).UpdateHospital(ctx, req.(*UpdateHospitalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HospitalAPI_ListHospitals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListHospitalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HospitalAPIServer).ListHospitals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.hospital.HospitalAPI/ListHospitals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HospitalAPIServer).ListHospitals(ctx, req.(*ListHospitalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HospitalAPI_SearchHospitals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchHospitalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HospitalAPIServer).SearchHospitals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.hospital.HospitalAPI/SearchHospitals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HospitalAPIServer).SearchHospitals(ctx, req.(*SearchHospitalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HospitalAPI_CheckSuspension_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckSuspensionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HospitalAPIServer).CheckSuspension(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.hospital.HospitalAPI/CheckSuspension",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HospitalAPIServer).CheckSuspension(ctx, req.(*CheckSuspensionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HospitalAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "umrs.hospital.HospitalAPI",
	HandlerType: (*HospitalAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddHospital",
			Handler:    _HospitalAPI_AddHospital_Handler,
		},
		{
			MethodName: "GetHospital",
			Handler:    _HospitalAPI_GetHospital_Handler,
		},
		{
			MethodName: "DeleteHospital",
			Handler:    _HospitalAPI_DeleteHospital_Handler,
		},
		{
			MethodName: "UpdateHospital",
			Handler:    _HospitalAPI_UpdateHospital_Handler,
		},
		{
			MethodName: "ListHospitals",
			Handler:    _HospitalAPI_ListHospitals_Handler,
		},
		{
			MethodName: "SearchHospitals",
			Handler:    _HospitalAPI_SearchHospitals_Handler,
		},
		{
			MethodName: "CheckSuspension",
			Handler:    _HospitalAPI_CheckSuspension_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hospital.proto",
}
