// Code generated by protoc-gen-go. DO NOT EDIT.
// source: employment.proto

package employment

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// EmploymentType represent the type of an employment
type EmploymentType int32

const (
	EmploymentType_UNKNOWN     EmploymentType = 0
	EmploymentType_PERMANENT   EmploymentType = 1
	EmploymentType_CASUAL      EmploymentType = 2
	EmploymentType_APPRENTICE  EmploymentType = 3
	EmploymentType_CONTRACTUAL EmploymentType = 4
)

var EmploymentType_name = map[int32]string{
	0: "UNKNOWN",
	1: "PERMANENT",
	2: "CASUAL",
	3: "APPRENTICE",
	4: "CONTRACTUAL",
}

var EmploymentType_value = map[string]int32{
	"UNKNOWN":     0,
	"PERMANENT":   1,
	"CASUAL":      2,
	"APPRENTICE":  3,
	"CONTRACTUAL": 4,
}

func (x EmploymentType) String() string {
	return proto.EnumName(EmploymentType_name, int32(x))
}

func (EmploymentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{0}
}

// Employment contains employment information
type Employment struct {
	AccountId            string         `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	FullName             string         `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	ProfileThumbUrl      string         `protobuf:"bytes,3,opt,name=profile_thumb_url,json=profileThumbUrl,proto3" json:"profile_thumb_url,omitempty"`
	EmploymentId         string         `protobuf:"bytes,4,opt,name=employment_id,json=employmentId,proto3" json:"employment_id,omitempty"`
	EmploymentType       EmploymentType `protobuf:"varint,5,opt,name=employment_type,json=employmentType,proto3,enum=EmploymentType" json:"employment_type,omitempty"`
	JoinedDate           string         `protobuf:"bytes,6,opt,name=joined_date,json=joinedDate,proto3" json:"joined_date,omitempty"`
	OrganizationType     string         `protobuf:"bytes,7,opt,name=organization_type,json=organizationType,proto3" json:"organization_type,omitempty"`
	OrganizationName     string         `protobuf:"bytes,8,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	OrganizationId       string         `protobuf:"bytes,9,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	RoleAtOrganization   string         `protobuf:"bytes,10,opt,name=role_at_organization,json=roleAtOrganization,proto3" json:"role_at_organization,omitempty"`
	WorkEmail            string         `protobuf:"bytes,11,opt,name=work_email,json=workEmail,proto3" json:"work_email,omitempty"`
	EmploymentVerified   bool           `protobuf:"varint,12,opt,name=employment_verified,json=employmentVerified,proto3" json:"employment_verified,omitempty"`
	StillEmployed        bool           `protobuf:"varint,13,opt,name=still_employed,json=stillEmployed,proto3" json:"still_employed,omitempty"`
	IsRecent             bool           `protobuf:"varint,14,opt,name=is_recent,json=isRecent,proto3" json:"is_recent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Employment) Reset()         { *m = Employment{} }
func (m *Employment) String() string { return proto.CompactTextString(m) }
func (*Employment) ProtoMessage()    {}
func (*Employment) Descriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{0}
}

func (m *Employment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Employment.Unmarshal(m, b)
}
func (m *Employment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Employment.Marshal(b, m, deterministic)
}
func (m *Employment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Employment.Merge(m, src)
}
func (m *Employment) XXX_Size() int {
	return xxx_messageInfo_Employment.Size(m)
}
func (m *Employment) XXX_DiscardUnknown() {
	xxx_messageInfo_Employment.DiscardUnknown(m)
}

var xxx_messageInfo_Employment proto.InternalMessageInfo

func (m *Employment) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Employment) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Employment) GetProfileThumbUrl() string {
	if m != nil {
		return m.ProfileThumbUrl
	}
	return ""
}

func (m *Employment) GetEmploymentId() string {
	if m != nil {
		return m.EmploymentId
	}
	return ""
}

func (m *Employment) GetEmploymentType() EmploymentType {
	if m != nil {
		return m.EmploymentType
	}
	return EmploymentType_UNKNOWN
}

func (m *Employment) GetJoinedDate() string {
	if m != nil {
		return m.JoinedDate
	}
	return ""
}

func (m *Employment) GetOrganizationType() string {
	if m != nil {
		return m.OrganizationType
	}
	return ""
}

func (m *Employment) GetOrganizationName() string {
	if m != nil {
		return m.OrganizationName
	}
	return ""
}

func (m *Employment) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *Employment) GetRoleAtOrganization() string {
	if m != nil {
		return m.RoleAtOrganization
	}
	return ""
}

func (m *Employment) GetWorkEmail() string {
	if m != nil {
		return m.WorkEmail
	}
	return ""
}

func (m *Employment) GetEmploymentVerified() bool {
	if m != nil {
		return m.EmploymentVerified
	}
	return false
}

func (m *Employment) GetStillEmployed() bool {
	if m != nil {
		return m.StillEmployed
	}
	return false
}

func (m *Employment) GetIsRecent() bool {
	if m != nil {
		return m.IsRecent
	}
	return false
}

// Actor represent an actor performing an action
type Actor struct {
	Actor                int32    `protobuf:"varint,1,opt,name=actor,proto3" json:"actor,omitempty"`
	ActorId              string   `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Actor) Reset()         { *m = Actor{} }
func (m *Actor) String() string { return proto.CompactTextString(m) }
func (*Actor) ProtoMessage()    {}
func (*Actor) Descriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{1}
}

func (m *Actor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Actor.Unmarshal(m, b)
}
func (m *Actor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Actor.Marshal(b, m, deterministic)
}
func (m *Actor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Actor.Merge(m, src)
}
func (m *Actor) XXX_Size() int {
	return xxx_messageInfo_Actor.Size(m)
}
func (m *Actor) XXX_DiscardUnknown() {
	xxx_messageInfo_Actor.DiscardUnknown(m)
}

var xxx_messageInfo_Actor proto.InternalMessageInfo

func (m *Actor) GetActor() int32 {
	if m != nil {
		return m.Actor
	}
	return 0
}

func (m *Actor) GetActorId() string {
	if m != nil {
		return m.ActorId
	}
	return ""
}

// AddEmploymentRequest is request to add new employment information
type AddEmploymentRequest struct {
	Employment           *Employment `protobuf:"bytes,1,opt,name=employment,proto3" json:"employment,omitempty"`
	Actor                *Actor      `protobuf:"bytes,2,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AddEmploymentRequest) Reset()         { *m = AddEmploymentRequest{} }
func (m *AddEmploymentRequest) String() string { return proto.CompactTextString(m) }
func (*AddEmploymentRequest) ProtoMessage()    {}
func (*AddEmploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{2}
}

func (m *AddEmploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEmploymentRequest.Unmarshal(m, b)
}
func (m *AddEmploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEmploymentRequest.Marshal(b, m, deterministic)
}
func (m *AddEmploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEmploymentRequest.Merge(m, src)
}
func (m *AddEmploymentRequest) XXX_Size() int {
	return xxx_messageInfo_AddEmploymentRequest.Size(m)
}
func (m *AddEmploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEmploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddEmploymentRequest proto.InternalMessageInfo

func (m *AddEmploymentRequest) GetEmployment() *Employment {
	if m != nil {
		return m.Employment
	}
	return nil
}

func (m *AddEmploymentRequest) GetActor() *Actor {
	if m != nil {
		return m.Actor
	}
	return nil
}

// AddEmploymentResponse is response after adding an employment
type AddEmploymentResponse struct {
	EmploymentId         string   `protobuf:"bytes,1,opt,name=employment_id,json=employmentId,proto3" json:"employment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEmploymentResponse) Reset()         { *m = AddEmploymentResponse{} }
func (m *AddEmploymentResponse) String() string { return proto.CompactTextString(m) }
func (*AddEmploymentResponse) ProtoMessage()    {}
func (*AddEmploymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{3}
}

func (m *AddEmploymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEmploymentResponse.Unmarshal(m, b)
}
func (m *AddEmploymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEmploymentResponse.Marshal(b, m, deterministic)
}
func (m *AddEmploymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEmploymentResponse.Merge(m, src)
}
func (m *AddEmploymentResponse) XXX_Size() int {
	return xxx_messageInfo_AddEmploymentResponse.Size(m)
}
func (m *AddEmploymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEmploymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddEmploymentResponse proto.InternalMessageInfo

func (m *AddEmploymentResponse) GetEmploymentId() string {
	if m != nil {
		return m.EmploymentId
	}
	return ""
}

// UpdateEmploymentRequest is request to update employment
type UpdateEmploymentRequest struct {
	Employment           *Employment `protobuf:"bytes,1,opt,name=employment,proto3" json:"employment,omitempty"`
	Actor                *Actor      `protobuf:"bytes,2,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateEmploymentRequest) Reset()         { *m = UpdateEmploymentRequest{} }
func (m *UpdateEmploymentRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateEmploymentRequest) ProtoMessage()    {}
func (*UpdateEmploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{4}
}

func (m *UpdateEmploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEmploymentRequest.Unmarshal(m, b)
}
func (m *UpdateEmploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEmploymentRequest.Marshal(b, m, deterministic)
}
func (m *UpdateEmploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEmploymentRequest.Merge(m, src)
}
func (m *UpdateEmploymentRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateEmploymentRequest.Size(m)
}
func (m *UpdateEmploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEmploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEmploymentRequest proto.InternalMessageInfo

func (m *UpdateEmploymentRequest) GetEmployment() *Employment {
	if m != nil {
		return m.Employment
	}
	return nil
}

func (m *UpdateEmploymentRequest) GetActor() *Actor {
	if m != nil {
		return m.Actor
	}
	return nil
}

// GetRecentEmploymentRequest is request to retrieve most recent employment
type GetRecentEmploymentRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Actor                *Actor   `protobuf:"bytes,2,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecentEmploymentRequest) Reset()         { *m = GetRecentEmploymentRequest{} }
func (m *GetRecentEmploymentRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecentEmploymentRequest) ProtoMessage()    {}
func (*GetRecentEmploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{5}
}

func (m *GetRecentEmploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecentEmploymentRequest.Unmarshal(m, b)
}
func (m *GetRecentEmploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecentEmploymentRequest.Marshal(b, m, deterministic)
}
func (m *GetRecentEmploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecentEmploymentRequest.Merge(m, src)
}
func (m *GetRecentEmploymentRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecentEmploymentRequest.Size(m)
}
func (m *GetRecentEmploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecentEmploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecentEmploymentRequest proto.InternalMessageInfo

func (m *GetRecentEmploymentRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GetRecentEmploymentRequest) GetActor() *Actor {
	if m != nil {
		return m.Actor
	}
	return nil
}

// GetEmploymentRequest is request to retrieve a single employment
type GetEmploymentRequest struct {
	EmploymentId         string   `protobuf:"bytes,1,opt,name=employment_id,json=employmentId,proto3" json:"employment_id,omitempty"`
	Actor                *Actor   `protobuf:"bytes,2,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEmploymentRequest) Reset()         { *m = GetEmploymentRequest{} }
func (m *GetEmploymentRequest) String() string { return proto.CompactTextString(m) }
func (*GetEmploymentRequest) ProtoMessage()    {}
func (*GetEmploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{6}
}

func (m *GetEmploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEmploymentRequest.Unmarshal(m, b)
}
func (m *GetEmploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEmploymentRequest.Marshal(b, m, deterministic)
}
func (m *GetEmploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEmploymentRequest.Merge(m, src)
}
func (m *GetEmploymentRequest) XXX_Size() int {
	return xxx_messageInfo_GetEmploymentRequest.Size(m)
}
func (m *GetEmploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEmploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEmploymentRequest proto.InternalMessageInfo

func (m *GetEmploymentRequest) GetEmploymentId() string {
	if m != nil {
		return m.EmploymentId
	}
	return ""
}

func (m *GetEmploymentRequest) GetActor() *Actor {
	if m != nil {
		return m.Actor
	}
	return nil
}

// DeleteEmploymentRequest is request to delete employment
type DeleteEmploymentRequest struct {
	EmploymentId         string   `protobuf:"bytes,1,opt,name=employment_id,json=employmentId,proto3" json:"employment_id,omitempty"`
	Actor                *Actor   `protobuf:"bytes,2,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEmploymentRequest) Reset()         { *m = DeleteEmploymentRequest{} }
func (m *DeleteEmploymentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteEmploymentRequest) ProtoMessage()    {}
func (*DeleteEmploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{7}
}

func (m *DeleteEmploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEmploymentRequest.Unmarshal(m, b)
}
func (m *DeleteEmploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEmploymentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteEmploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEmploymentRequest.Merge(m, src)
}
func (m *DeleteEmploymentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteEmploymentRequest.Size(m)
}
func (m *DeleteEmploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEmploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEmploymentRequest proto.InternalMessageInfo

func (m *DeleteEmploymentRequest) GetEmploymentId() string {
	if m != nil {
		return m.EmploymentId
	}
	return ""
}

func (m *DeleteEmploymentRequest) GetActor() *Actor {
	if m != nil {
		return m.Actor
	}
	return nil
}

// GetEmploymentsRequest is request to retrieve employment history
type GetEmploymentsRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber           int32    `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	Actor                *Actor   `protobuf:"bytes,4,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEmploymentsRequest) Reset()         { *m = GetEmploymentsRequest{} }
func (m *GetEmploymentsRequest) String() string { return proto.CompactTextString(m) }
func (*GetEmploymentsRequest) ProtoMessage()    {}
func (*GetEmploymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{8}
}

func (m *GetEmploymentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEmploymentsRequest.Unmarshal(m, b)
}
func (m *GetEmploymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEmploymentsRequest.Marshal(b, m, deterministic)
}
func (m *GetEmploymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEmploymentsRequest.Merge(m, src)
}
func (m *GetEmploymentsRequest) XXX_Size() int {
	return xxx_messageInfo_GetEmploymentsRequest.Size(m)
}
func (m *GetEmploymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEmploymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEmploymentsRequest proto.InternalMessageInfo

func (m *GetEmploymentsRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *GetEmploymentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetEmploymentsRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *GetEmploymentsRequest) GetActor() *Actor {
	if m != nil {
		return m.Actor
	}
	return nil
}

// Employments is a collection of employments
type Employments struct {
	Employments          []*Employment `protobuf:"bytes,1,rep,name=employments,proto3" json:"employments,omitempty"`
	NextPageNumber       int32         `protobuf:"varint,2,opt,name=next_page_number,json=nextPageNumber,proto3" json:"next_page_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Employments) Reset()         { *m = Employments{} }
func (m *Employments) String() string { return proto.CompactTextString(m) }
func (*Employments) ProtoMessage()    {}
func (*Employments) Descriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{9}
}

func (m *Employments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Employments.Unmarshal(m, b)
}
func (m *Employments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Employments.Marshal(b, m, deterministic)
}
func (m *Employments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Employments.Merge(m, src)
}
func (m *Employments) XXX_Size() int {
	return xxx_messageInfo_Employments.Size(m)
}
func (m *Employments) XXX_DiscardUnknown() {
	xxx_messageInfo_Employments.DiscardUnknown(m)
}

var xxx_messageInfo_Employments proto.InternalMessageInfo

func (m *Employments) GetEmployments() []*Employment {
	if m != nil {
		return m.Employments
	}
	return nil
}

func (m *Employments) GetNextPageNumber() int32 {
	if m != nil {
		return m.NextPageNumber
	}
	return 0
}

// CheckEmploymentStatusRequest is request to check if an employer is employed
type CheckEmploymentStatusRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Actor                *Actor   `protobuf:"bytes,2,opt,name=actor,proto3" json:"actor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckEmploymentStatusRequest) Reset()         { *m = CheckEmploymentStatusRequest{} }
func (m *CheckEmploymentStatusRequest) String() string { return proto.CompactTextString(m) }
func (*CheckEmploymentStatusRequest) ProtoMessage()    {}
func (*CheckEmploymentStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{10}
}

func (m *CheckEmploymentStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckEmploymentStatusRequest.Unmarshal(m, b)
}
func (m *CheckEmploymentStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckEmploymentStatusRequest.Marshal(b, m, deterministic)
}
func (m *CheckEmploymentStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckEmploymentStatusRequest.Merge(m, src)
}
func (m *CheckEmploymentStatusRequest) XXX_Size() int {
	return xxx_messageInfo_CheckEmploymentStatusRequest.Size(m)
}
func (m *CheckEmploymentStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckEmploymentStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckEmploymentStatusRequest proto.InternalMessageInfo

func (m *CheckEmploymentStatusRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *CheckEmploymentStatusRequest) GetActor() *Actor {
	if m != nil {
		return m.Actor
	}
	return nil
}

// CheckEmploymentStatusResponse is response after checking if an employee is employed
type CheckEmploymentStatusResponse struct {
	IsEmployed           bool     `protobuf:"varint,1,opt,name=is_employed,json=isEmployed,proto3" json:"is_employed,omitempty"`
	IsVerified           bool     `protobuf:"varint,2,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckEmploymentStatusResponse) Reset()         { *m = CheckEmploymentStatusResponse{} }
func (m *CheckEmploymentStatusResponse) String() string { return proto.CompactTextString(m) }
func (*CheckEmploymentStatusResponse) ProtoMessage()    {}
func (*CheckEmploymentStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4cb86c41c4ef8cf2, []int{11}
}

func (m *CheckEmploymentStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckEmploymentStatusResponse.Unmarshal(m, b)
}
func (m *CheckEmploymentStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckEmploymentStatusResponse.Marshal(b, m, deterministic)
}
func (m *CheckEmploymentStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckEmploymentStatusResponse.Merge(m, src)
}
func (m *CheckEmploymentStatusResponse) XXX_Size() int {
	return xxx_messageInfo_CheckEmploymentStatusResponse.Size(m)
}
func (m *CheckEmploymentStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckEmploymentStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckEmploymentStatusResponse proto.InternalMessageInfo

func (m *CheckEmploymentStatusResponse) GetIsEmployed() bool {
	if m != nil {
		return m.IsEmployed
	}
	return false
}

func (m *CheckEmploymentStatusResponse) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func init() {
	proto.RegisterEnum("EmploymentType", EmploymentType_name, EmploymentType_value)
	proto.RegisterType((*Employment)(nil), "Employment")
	proto.RegisterType((*Actor)(nil), "Actor")
	proto.RegisterType((*AddEmploymentRequest)(nil), "AddEmploymentRequest")
	proto.RegisterType((*AddEmploymentResponse)(nil), "AddEmploymentResponse")
	proto.RegisterType((*UpdateEmploymentRequest)(nil), "UpdateEmploymentRequest")
	proto.RegisterType((*GetRecentEmploymentRequest)(nil), "GetRecentEmploymentRequest")
	proto.RegisterType((*GetEmploymentRequest)(nil), "GetEmploymentRequest")
	proto.RegisterType((*DeleteEmploymentRequest)(nil), "DeleteEmploymentRequest")
	proto.RegisterType((*GetEmploymentsRequest)(nil), "GetEmploymentsRequest")
	proto.RegisterType((*Employments)(nil), "Employments")
	proto.RegisterType((*CheckEmploymentStatusRequest)(nil), "CheckEmploymentStatusRequest")
	proto.RegisterType((*CheckEmploymentStatusResponse)(nil), "CheckEmploymentStatusResponse")
}

func init() { proto.RegisterFile("employment.proto", fileDescriptor_4cb86c41c4ef8cf2) }

var fileDescriptor_4cb86c41c4ef8cf2 = []byte{
	// 983 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xef, 0x6e, 0xdb, 0x54,
	0x14, 0xc7, 0x6d, 0x93, 0x26, 0x27, 0xcd, 0x9f, 0x9d, 0x35, 0x9d, 0x49, 0x5b, 0x56, 0x19, 0x4d,
	0xab, 0x5a, 0xe2, 0x8c, 0x16, 0xd0, 0xd8, 0xf8, 0x62, 0x65, 0xd1, 0x14, 0x01, 0x69, 0xe4, 0xa6,
	0xa0, 0x09, 0x24, 0xcb, 0x89, 0x6f, 0x32, 0x53, 0xc7, 0x36, 0xf6, 0x0d, 0x23, 0x9d, 0xf8, 0x00,
	0x6f, 0x00, 0x3c, 0x0f, 0x4f, 0xc1, 0x2b, 0xf0, 0x99, 0x67, 0x40, 0x3e, 0x76, 0x6b, 0x27, 0x71,
	0x96, 0x4e, 0x1a, 0x9f, 0xec, 0x7b, 0xce, 0x4f, 0xe7, 0xfc, 0xee, 0xf9, 0xf3, 0xbb, 0x50, 0x61,
	0x63, 0xd7, 0x72, 0xa6, 0x63, 0x66, 0x73, 0xd9, 0xf5, 0x1c, 0xee, 0xd4, 0x76, 0x47, 0x8e, 0x33,
	0xb2, 0x58, 0x83, 0x4e, 0xfd, 0xc9, 0xb0, 0xc1, 0xc6, 0x2e, 0x9f, 0x46, 0xce, 0xbd, 0xc8, 0xa9,
	0xbb, 0x66, 0x43, 0xb7, 0x6d, 0x87, 0xeb, 0xdc, 0x74, 0x6c, 0x3f, 0xf2, 0x7e, 0x44, 0x9f, 0x41,
	0x7d, 0xc4, 0xec, 0xba, 0xff, 0x4a, 0x1f, 0x8d, 0x98, 0xd7, 0x70, 0x5c, 0x42, 0x2c, 0xa2, 0xa5,
	0xbf, 0x36, 0x00, 0x5a, 0x37, 0xd9, 0x71, 0x1f, 0x40, 0x1f, 0x0c, 0x9c, 0x89, 0xcd, 0x35, 0xd3,
	0x10, 0x85, 0x03, 0xe1, 0x30, 0xaf, 0xe6, 0x23, 0x4b, 0xdb, 0xc0, 0x5d, 0xc8, 0x0f, 0x27, 0x96,
	0xa5, 0xd9, 0xfa, 0x98, 0x89, 0x6b, 0xe4, 0xcd, 0x05, 0x86, 0x8e, 0x3e, 0x66, 0x78, 0x04, 0x77,
	0x5c, 0xcf, 0x19, 0x9a, 0x16, 0xd3, 0xf8, 0xcb, 0xc9, 0xb8, 0xaf, 0x4d, 0x3c, 0x4b, 0x5c, 0x27,
	0x50, 0x39, 0x72, 0xf4, 0x02, 0xfb, 0x85, 0x67, 0xe1, 0x87, 0x50, 0x8c, 0xef, 0x1c, 0xa4, 0xda,
	0x20, 0xdc, 0x56, 0x6c, 0x6c, 0x1b, 0xf8, 0x18, 0xca, 0x09, 0x10, 0x9f, 0xba, 0x4c, 0xcc, 0x1c,
	0x08, 0x87, 0xa5, 0x93, 0xb2, 0x1c, 0x53, 0xee, 0x4d, 0x5d, 0xa6, 0x96, 0xd8, 0xcc, 0x19, 0xef,
	0x43, 0xe1, 0x07, 0xc7, 0xb4, 0x99, 0xa1, 0x19, 0x3a, 0x67, 0x62, 0x96, 0x82, 0x43, 0x68, 0x7a,
	0xa6, 0x73, 0x86, 0xc7, 0x70, 0xc7, 0xf1, 0x46, 0xba, 0x6d, 0x5e, 0x51, 0x35, 0xc2, 0xe0, 0x9b,
	0x04, 0xab, 0x24, 0x1d, 0x14, 0x6d, 0x1e, 0x4c, 0xb7, 0xcf, 0x2d, 0x82, 0xa9, 0x0a, 0x0f, 0xa1,
	0x3c, 0x03, 0x36, 0x0d, 0x31, 0x4f, 0xd0, 0x52, 0xd2, 0xdc, 0x36, 0xf0, 0x11, 0x6c, 0x7b, 0x8e,
	0xc5, 0x34, 0x9d, 0x6b, 0x49, 0x8f, 0x08, 0x84, 0xc6, 0xc0, 0xa7, 0xf0, 0xb3, 0x84, 0x27, 0x68,
	0xce, 0x2b, 0xc7, 0xbb, 0xd4, 0xd8, 0x58, 0x37, 0x2d, 0xb1, 0x10, 0x36, 0x27, 0xb0, 0xb4, 0x02,
	0x03, 0x36, 0xe0, 0x6e, 0xa2, 0x5c, 0x3f, 0x31, 0xcf, 0x1c, 0x9a, 0xcc, 0x10, 0xb7, 0x0e, 0x84,
	0xc3, 0x9c, 0x8a, 0xb1, 0xeb, 0x9b, 0xc8, 0x83, 0x0f, 0xa0, 0xe4, 0x73, 0xd3, 0xb2, 0xb4, 0xd0,
	0xc7, 0x0c, 0xb1, 0x48, 0xd8, 0x22, 0x59, 0x5b, 0x91, 0x31, 0x68, 0xba, 0xe9, 0x6b, 0x1e, 0x1b,
	0x30, 0x9b, 0x8b, 0x25, 0x42, 0xe4, 0x4c, 0x5f, 0xa5, 0xb3, 0xf4, 0x18, 0x32, 0xca, 0x80, 0x3b,
	0x1e, 0x6e, 0x43, 0x46, 0x0f, 0x7e, 0x68, 0x68, 0x32, 0x6a, 0x78, 0xc0, 0xf7, 0x21, 0x47, 0x3f,
	0x41, 0x19, 0xc2, 0x79, 0xd9, 0xa4, 0x73, 0xdb, 0x90, 0x74, 0xd8, 0x56, 0x0c, 0x23, 0x6e, 0xa4,
	0xca, 0x7e, 0x9c, 0x30, 0x9f, 0xe3, 0x31, 0x40, 0xcc, 0x95, 0xa2, 0x15, 0x4e, 0x0a, 0x89, 0x86,
	0xab, 0x09, 0x37, 0xee, 0x5d, 0x67, 0x5d, 0x23, 0x5c, 0x56, 0x26, 0x32, 0x51, 0x76, 0xe9, 0x0b,
	0xa8, 0xce, 0xa5, 0xf0, 0x5d, 0xc7, 0xf6, 0xd9, 0xe2, 0xf8, 0x09, 0x8b, 0xe3, 0x27, 0x19, 0x70,
	0xef, 0xc2, 0x0d, 0xe6, 0xe7, 0x7f, 0xe5, 0xf8, 0x02, 0x6a, 0xcf, 0x19, 0x0f, 0xab, 0xb9, 0x98,
	0x68, 0xc5, 0x3e, 0xae, 0x0a, 0xbd, 0xfd, 0x9c, 0xa5, 0x04, 0xbd, 0xcd, 0xed, 0x57, 0x84, 0xfe,
	0x1e, 0xee, 0x3d, 0x63, 0x16, 0x4b, 0xab, 0xcd, 0x3b, 0x88, 0xfe, 0x87, 0x00, 0xd5, 0x19, 0xe6,
	0xfe, 0x2d, 0xeb, 0xb1, 0x0b, 0x79, 0x57, 0x1f, 0x31, 0xcd, 0x37, 0xaf, 0x42, 0x7d, 0xca, 0xa8,
	0xb9, 0xc0, 0x70, 0x6e, 0x5e, 0x91, 0x28, 0x90, 0xd3, 0x9e, 0x8c, 0xfb, 0xcc, 0x23, 0x65, 0xca,
	0xa8, 0x10, 0x98, 0x3a, 0x64, 0x89, 0x49, 0x6d, 0xa4, 0x91, 0x1a, 0x42, 0x21, 0x41, 0x08, 0xeb,
	0x50, 0x88, 0x6f, 0xe4, 0x8b, 0xc2, 0xc1, 0xfa, 0xfc, 0x0c, 0x24, 0xfd, 0x78, 0x08, 0x15, 0x9b,
	0xfd, 0xcc, 0xb5, 0x24, 0x83, 0x90, 0x60, 0x29, 0xb0, 0x77, 0x6f, 0x58, 0x48, 0xdf, 0xc1, 0x5e,
	0xf3, 0x25, 0x1b, 0x5c, 0xc6, 0x91, 0xce, 0xb9, 0xce, 0x27, 0xfe, 0x3b, 0x19, 0x09, 0x1d, 0xf6,
	0x97, 0x04, 0x8f, 0x36, 0xe3, 0x3e, 0x14, 0x4c, 0x3f, 0x16, 0x04, 0x81, 0xd6, 0x1d, 0x4c, 0xff,
	0x46, 0x0d, 0x42, 0xc0, 0x8d, 0xba, 0xac, 0x5d, 0x03, 0xae, 0x55, 0xe5, 0xe8, 0x05, 0x94, 0x66,
	0xd5, 0x19, 0x0b, 0xb0, 0x79, 0xd1, 0xf9, 0xb2, 0x73, 0xf6, 0x6d, 0xa7, 0xf2, 0x1e, 0x16, 0x21,
	0xdf, 0x6d, 0xa9, 0x5f, 0x2b, 0x9d, 0x56, 0xa7, 0x57, 0x11, 0x10, 0x20, 0xdb, 0x54, 0xce, 0x2f,
	0x94, 0xaf, 0x2a, 0x6b, 0x58, 0x02, 0x50, 0xba, 0x5d, 0xb5, 0xd5, 0xe9, 0xb5, 0x9b, 0xad, 0xca,
	0x3a, 0x96, 0xa1, 0xd0, 0x3c, 0xeb, 0xf4, 0x54, 0xa5, 0xd9, 0x0b, 0x00, 0x1b, 0x27, 0xff, 0x66,
	0xa1, 0x18, 0xc7, 0x56, 0xba, 0x6d, 0xfc, 0x55, 0x80, 0xe2, 0xcc, 0x8a, 0x63, 0x55, 0x4e, 0x53,
	0x95, 0xda, 0x8e, 0x9c, 0xaa, 0x04, 0x92, 0xf2, 0xdb, 0xdf, 0xff, 0xfc, 0xb9, 0xf6, 0x54, 0xfa,
	0x8c, 0x5e, 0xd3, 0xf1, 0x60, 0xe8, 0x36, 0x12, 0x6d, 0x6b, 0x44, 0x75, 0xf5, 0x1b, 0xaf, 0x13,
	0x4f, 0x74, 0x5c, 0xfe, 0x5f, 0x9e, 0x08, 0x47, 0x01, 0x87, 0xca, 0xbc, 0x50, 0xa0, 0x28, 0x2f,
	0xd1, 0x8e, 0xda, 0x8e, 0x1c, 0x3e, 0xdf, 0xf2, 0xf5, 0xdb, 0x1e, 0xcc, 0x0c, 0x9f, 0x4a, 0x4f,
	0x89, 0xc9, 0xa7, 0xb5, 0x47, 0xe9, 0x4c, 0x92, 0x04, 0x66, 0xf6, 0x8b, 0x38, 0xf4, 0xa1, 0x38,
	0xb3, 0x30, 0x58, 0x95, 0xd3, 0x56, 0xbf, 0x96, 0x1c, 0x50, 0xa9, 0x4e, 0x19, 0x1f, 0xe2, 0x83,
	0x95, 0x19, 0x83, 0x34, 0xe8, 0x43, 0x65, 0x7e, 0xe7, 0x51, 0x94, 0x97, 0xc8, 0xc0, 0xd2, 0x6b,
	0x46, 0x49, 0x8f, 0x6e, 0x99, 0xf4, 0x35, 0xdc, 0x4d, 0x91, 0x47, 0xdc, 0x95, 0x97, 0x8b, 0xe6,
	0xec, 0x25, 0x9f, 0x50, 0xbe, 0x4f, 0xf0, 0x64, 0x55, 0x83, 0x13, 0x5d, 0x6d, 0x84, 0x8f, 0x1d,
	0x5e, 0x42, 0x69, 0x56, 0x86, 0x70, 0x47, 0x4e, 0xd5, 0xa5, 0xda, 0x56, 0x22, 0xa5, 0x2f, 0x9d,
	0x52, 0xce, 0x3a, 0x1e, 0xbf, 0x45, 0x4e, 0xfc, 0x5d, 0x80, 0x6a, 0xea, 0x6e, 0xe2, 0xbe, 0xfc,
	0x26, 0x41, 0xa8, 0x7d, 0x20, 0xbf, 0x71, 0xa5, 0xa5, 0xcf, 0x89, 0xcd, 0x29, 0x7e, 0xfc, 0x36,
	0x15, 0x18, 0x04, 0x21, 0xfb, 0x59, 0x6a, 0xde, 0xe9, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x93,
	0x88, 0x88, 0x73, 0xa1, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EmploymentAPIClient is the client API for EmploymentAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmploymentAPIClient interface {
	// Adds a new employment for a employee
	AddEmployment(ctx context.Context, in *AddEmploymentRequest, opts ...grpc.CallOption) (*AddEmploymentResponse, error)
	// Updates an existing employment for an employer
	UpdateEmployment(ctx context.Context, in *UpdateEmploymentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Retrieve a single employment
	GetEmployment(ctx context.Context, in *GetEmploymentRequest, opts ...grpc.CallOption) (*Employment, error)
	// Removes an employment data
	DeleteEmployment(ctx context.Context, in *DeleteEmploymentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Retrieve most recent employment
	GetRecentEmployment(ctx context.Context, in *GetRecentEmploymentRequest, opts ...grpc.CallOption) (*Employment, error)
	// Retrieve list of employments
	GetEmployments(ctx context.Context, in *GetEmploymentsRequest, opts ...grpc.CallOption) (*Employments, error)
	// Checks whether the user account is employed
	CheckEmploymentStatus(ctx context.Context, in *CheckEmploymentStatusRequest, opts ...grpc.CallOption) (*CheckEmploymentStatusResponse, error)
}

type employmentAPIClient struct {
	cc *grpc.ClientConn
}

func NewEmploymentAPIClient(cc *grpc.ClientConn) EmploymentAPIClient {
	return &employmentAPIClient{cc}
}

func (c *employmentAPIClient) AddEmployment(ctx context.Context, in *AddEmploymentRequest, opts ...grpc.CallOption) (*AddEmploymentResponse, error) {
	out := new(AddEmploymentResponse)
	err := c.cc.Invoke(ctx, "/EmploymentAPI/AddEmployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *employmentAPIClient) UpdateEmployment(ctx context.Context, in *UpdateEmploymentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/EmploymentAPI/UpdateEmployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *employmentAPIClient) GetEmployment(ctx context.Context, in *GetEmploymentRequest, opts ...grpc.CallOption) (*Employment, error) {
	out := new(Employment)
	err := c.cc.Invoke(ctx, "/EmploymentAPI/GetEmployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *employmentAPIClient) DeleteEmployment(ctx context.Context, in *DeleteEmploymentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/EmploymentAPI/DeleteEmployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *employmentAPIClient) GetRecentEmployment(ctx context.Context, in *GetRecentEmploymentRequest, opts ...grpc.CallOption) (*Employment, error) {
	out := new(Employment)
	err := c.cc.Invoke(ctx, "/EmploymentAPI/GetRecentEmployment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *employmentAPIClient) GetEmployments(ctx context.Context, in *GetEmploymentsRequest, opts ...grpc.CallOption) (*Employments, error) {
	out := new(Employments)
	err := c.cc.Invoke(ctx, "/EmploymentAPI/GetEmployments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *employmentAPIClient) CheckEmploymentStatus(ctx context.Context, in *CheckEmploymentStatusRequest, opts ...grpc.CallOption) (*CheckEmploymentStatusResponse, error) {
	out := new(CheckEmploymentStatusResponse)
	err := c.cc.Invoke(ctx, "/EmploymentAPI/CheckEmploymentStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmploymentAPIServer is the server API for EmploymentAPI service.
type EmploymentAPIServer interface {
	// Adds a new employment for a employee
	AddEmployment(context.Context, *AddEmploymentRequest) (*AddEmploymentResponse, error)
	// Updates an existing employment for an employer
	UpdateEmployment(context.Context, *UpdateEmploymentRequest) (*empty.Empty, error)
	// Retrieve a single employment
	GetEmployment(context.Context, *GetEmploymentRequest) (*Employment, error)
	// Removes an employment data
	DeleteEmployment(context.Context, *DeleteEmploymentRequest) (*empty.Empty, error)
	// Retrieve most recent employment
	GetRecentEmployment(context.Context, *GetRecentEmploymentRequest) (*Employment, error)
	// Retrieve list of employments
	GetEmployments(context.Context, *GetEmploymentsRequest) (*Employments, error)
	// Checks whether the user account is employed
	CheckEmploymentStatus(context.Context, *CheckEmploymentStatusRequest) (*CheckEmploymentStatusResponse, error)
}

func RegisterEmploymentAPIServer(s *grpc.Server, srv EmploymentAPIServer) {
	s.RegisterService(&_EmploymentAPI_serviceDesc, srv)
}

func _EmploymentAPI_AddEmployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddEmploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmploymentAPIServer).AddEmployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/EmploymentAPI/AddEmployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmploymentAPIServer).AddEmployment(ctx, req.(*AddEmploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmploymentAPI_UpdateEmployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEmploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmploymentAPIServer).UpdateEmployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/EmploymentAPI/UpdateEmployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmploymentAPIServer).UpdateEmployment(ctx, req.(*UpdateEmploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmploymentAPI_GetEmployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEmploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmploymentAPIServer).GetEmployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/EmploymentAPI/GetEmployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmploymentAPIServer).GetEmployment(ctx, req.(*GetEmploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmploymentAPI_DeleteEmployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEmploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmploymentAPIServer).DeleteEmployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/EmploymentAPI/DeleteEmployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmploymentAPIServer).DeleteEmployment(ctx, req.(*DeleteEmploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmploymentAPI_GetRecentEmployment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecentEmploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmploymentAPIServer).GetRecentEmployment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/EmploymentAPI/GetRecentEmployment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmploymentAPIServer).GetRecentEmployment(ctx, req.(*GetRecentEmploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmploymentAPI_GetEmployments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEmploymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmploymentAPIServer).GetEmployments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/EmploymentAPI/GetEmployments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmploymentAPIServer).GetEmployments(ctx, req.(*GetEmploymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmploymentAPI_CheckEmploymentStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckEmploymentStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmploymentAPIServer).CheckEmploymentStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/EmploymentAPI/CheckEmploymentStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmploymentAPIServer).CheckEmploymentStatus(ctx, req.(*CheckEmploymentStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmploymentAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "EmploymentAPI",
	HandlerType: (*EmploymentAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddEmployment",
			Handler:    _EmploymentAPI_AddEmployment_Handler,
		},
		{
			MethodName: "UpdateEmployment",
			Handler:    _EmploymentAPI_UpdateEmployment_Handler,
		},
		{
			MethodName: "GetEmployment",
			Handler:    _EmploymentAPI_GetEmployment_Handler,
		},
		{
			MethodName: "DeleteEmployment",
			Handler:    _EmploymentAPI_DeleteEmployment_Handler,
		},
		{
			MethodName: "GetRecentEmployment",
			Handler:    _EmploymentAPI_GetRecentEmployment_Handler,
		},
		{
			MethodName: "GetEmployments",
			Handler:    _EmploymentAPI_GetEmployments_Handler,
		},
		{
			MethodName: "CheckEmploymentStatus",
			Handler:    _EmploymentAPI_CheckEmploymentStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "employment.proto",
}
