// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notification.proto

package notification

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Priority represents the level of priority for a notification
type Priority int32

const (
	Priority_MEDIUM Priority = 0
	Priority_HIGH   Priority = 1
	Priority_LOW    Priority = 2
)

var Priority_name = map[int32]string{
	0: "MEDIUM",
	1: "HIGH",
	2: "LOW",
}

var Priority_value = map[string]int32{
	"MEDIUM": 0,
	"HIGH":   1,
	"LOW":    2,
}

func (x Priority) String() string {
	return proto.EnumName(Priority_name, int32(x))
}

func (Priority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{0}
}

// SendMethod is the method used to send a notification
type SendMethod int32

const (
	SendMethod_EMAIL         SendMethod = 0
	SendMethod_SMS           SendMethod = 1
	SendMethod_USSD          SendMethod = 2
	SendMethod_CALL          SendMethod = 3
	SendMethod_EMAIL_AND_SMS SendMethod = 4
)

var SendMethod_name = map[int32]string{
	0: "EMAIL",
	1: "SMS",
	2: "USSD",
	3: "CALL",
	4: "EMAIL_AND_SMS",
}

var SendMethod_value = map[string]int32{
	"EMAIL":         0,
	"SMS":           1,
	"USSD":          2,
	"CALL":          3,
	"EMAIL_AND_SMS": 4,
}

func (x SendMethod) String() string {
	return proto.EnumName(SendMethod_name, int32(x))
}

func (SendMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{1}
}

// Notification is a message containing information that requires attention
type Notification struct {
	NotificationId string               `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	OwnerIds       []string             `protobuf:"bytes,2,rep,name=owner_ids,json=ownerIds,proto3" json:"owner_ids,omitempty"`
	Priority       Priority             `protobuf:"varint,3,opt,name=priority,proto3,enum=umrs.notification.Priority" json:"priority,omitempty"`
	SendMethod     SendMethod           `protobuf:"varint,4,opt,name=send_method,json=sendMethod,proto3,enum=umrs.notification.SendMethod" json:"send_method,omitempty"`
	Content        *NotificationContent `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	CreateTimeSec  int64                `protobuf:"varint,6,opt,name=create_time_sec,json=createTimeSec,proto3" json:"create_time_sec,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*Notification_EmailNotification
	//	*Notification_SmsNotification
	//	*Notification_UssdNotification
	//	*Notification_CallNotification
	//	*Notification_EmailAndSms
	Payload              isNotification_Payload `protobuf_oneof:"payload"`
	BulkChannel          string                 `protobuf:"bytes,12,opt,name=bulk_channel,json=bulkChannel,proto3" json:"bulk_channel,omitempty"`
	Bulk                 bool                   `protobuf:"varint,13,opt,name=bulk,proto3" json:"bulk,omitempty"`
	Save                 bool                   `protobuf:"varint,14,opt,name=save,proto3" json:"save,omitempty"`
	Seen                 bool                   `protobuf:"varint,15,opt,name=seen,proto3" json:"seen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{0}
}

func (m *Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification.Unmarshal(m, b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
}
func (m *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(m, src)
}
func (m *Notification) XXX_Size() int {
	return xxx_messageInfo_Notification.Size(m)
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

func (m *Notification) GetNotificationId() string {
	if m != nil {
		return m.NotificationId
	}
	return ""
}

func (m *Notification) GetOwnerIds() []string {
	if m != nil {
		return m.OwnerIds
	}
	return nil
}

func (m *Notification) GetPriority() Priority {
	if m != nil {
		return m.Priority
	}
	return Priority_MEDIUM
}

func (m *Notification) GetSendMethod() SendMethod {
	if m != nil {
		return m.SendMethod
	}
	return SendMethod_EMAIL
}

func (m *Notification) GetContent() *NotificationContent {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Notification) GetCreateTimeSec() int64 {
	if m != nil {
		return m.CreateTimeSec
	}
	return 0
}

type isNotification_Payload interface {
	isNotification_Payload()
}

type Notification_EmailNotification struct {
	EmailNotification *EmailNotification `protobuf:"bytes,7,opt,name=email_notification,json=emailNotification,proto3,oneof"`
}

type Notification_SmsNotification struct {
	SmsNotification *SMSNotification `protobuf:"bytes,8,opt,name=sms_notification,json=smsNotification,proto3,oneof"`
}

type Notification_UssdNotification struct {
	UssdNotification *USSDNotification `protobuf:"bytes,9,opt,name=ussd_notification,json=ussdNotification,proto3,oneof"`
}

type Notification_CallNotification struct {
	CallNotification *CallNotification `protobuf:"bytes,10,opt,name=call_notification,json=callNotification,proto3,oneof"`
}

type Notification_EmailAndSms struct {
	EmailAndSms *EmailAndSMSNotification `protobuf:"bytes,11,opt,name=email_and_sms,json=emailAndSms,proto3,oneof"`
}

func (*Notification_EmailNotification) isNotification_Payload() {}

func (*Notification_SmsNotification) isNotification_Payload() {}

func (*Notification_UssdNotification) isNotification_Payload() {}

func (*Notification_CallNotification) isNotification_Payload() {}

func (*Notification_EmailAndSms) isNotification_Payload() {}

func (m *Notification) GetPayload() isNotification_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Notification) GetEmailNotification() *EmailNotification {
	if x, ok := m.GetPayload().(*Notification_EmailNotification); ok {
		return x.EmailNotification
	}
	return nil
}

func (m *Notification) GetSmsNotification() *SMSNotification {
	if x, ok := m.GetPayload().(*Notification_SmsNotification); ok {
		return x.SmsNotification
	}
	return nil
}

func (m *Notification) GetUssdNotification() *USSDNotification {
	if x, ok := m.GetPayload().(*Notification_UssdNotification); ok {
		return x.UssdNotification
	}
	return nil
}

func (m *Notification) GetCallNotification() *CallNotification {
	if x, ok := m.GetPayload().(*Notification_CallNotification); ok {
		return x.CallNotification
	}
	return nil
}

func (m *Notification) GetEmailAndSms() *EmailAndSMSNotification {
	if x, ok := m.GetPayload().(*Notification_EmailAndSms); ok {
		return x.EmailAndSms
	}
	return nil
}

func (m *Notification) GetBulkChannel() string {
	if m != nil {
		return m.BulkChannel
	}
	return ""
}

func (m *Notification) GetBulk() bool {
	if m != nil {
		return m.Bulk
	}
	return false
}

func (m *Notification) GetSave() bool {
	if m != nil {
		return m.Save
	}
	return false
}

func (m *Notification) GetSeen() bool {
	if m != nil {
		return m.Seen
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Notification) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Notification_EmailNotification)(nil),
		(*Notification_SmsNotification)(nil),
		(*Notification_UssdNotification)(nil),
		(*Notification_CallNotification)(nil),
		(*Notification_EmailAndSms)(nil),
	}
}

// NotificationContent is content of a notification
type NotificationContent struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NotificationContent) Reset()         { *m = NotificationContent{} }
func (m *NotificationContent) String() string { return proto.CompactTextString(m) }
func (*NotificationContent) ProtoMessage()    {}
func (*NotificationContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{1}
}

func (m *NotificationContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NotificationContent.Unmarshal(m, b)
}
func (m *NotificationContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NotificationContent.Marshal(b, m, deterministic)
}
func (m *NotificationContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationContent.Merge(m, src)
}
func (m *NotificationContent) XXX_Size() int {
	return xxx_messageInfo_NotificationContent.Size(m)
}
func (m *NotificationContent) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationContent.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationContent proto.InternalMessageInfo

func (m *NotificationContent) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *NotificationContent) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// EmailNotification is an email notification
type EmailNotification struct {
	To                   []string `protobuf:"bytes,2,rep,name=to,proto3" json:"to,omitempty"`
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Subject              string   `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	BodyContentType      string   `protobuf:"bytes,4,opt,name=body_content_type,json=bodyContentType,proto3" json:"body_content_type,omitempty"`
	Body                 string   `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailNotification) Reset()         { *m = EmailNotification{} }
func (m *EmailNotification) String() string { return proto.CompactTextString(m) }
func (*EmailNotification) ProtoMessage()    {}
func (*EmailNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{2}
}

func (m *EmailNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailNotification.Unmarshal(m, b)
}
func (m *EmailNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailNotification.Marshal(b, m, deterministic)
}
func (m *EmailNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailNotification.Merge(m, src)
}
func (m *EmailNotification) XXX_Size() int {
	return xxx_messageInfo_EmailNotification.Size(m)
}
func (m *EmailNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailNotification.DiscardUnknown(m)
}

var xxx_messageInfo_EmailNotification proto.InternalMessageInfo

func (m *EmailNotification) GetTo() []string {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *EmailNotification) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *EmailNotification) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *EmailNotification) GetBodyContentType() string {
	if m != nil {
		return m.BodyContentType
	}
	return ""
}

func (m *EmailNotification) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

// SMSNotification is an SMS notification
type SMSNotification struct {
	DestinationPhone     []string `protobuf:"bytes,2,rep,name=destination_phone,json=destinationPhone,proto3" json:"destination_phone,omitempty"`
	Keyword              string   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMSNotification) Reset()         { *m = SMSNotification{} }
func (m *SMSNotification) String() string { return proto.CompactTextString(m) }
func (*SMSNotification) ProtoMessage()    {}
func (*SMSNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{3}
}

func (m *SMSNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMSNotification.Unmarshal(m, b)
}
func (m *SMSNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMSNotification.Marshal(b, m, deterministic)
}
func (m *SMSNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMSNotification.Merge(m, src)
}
func (m *SMSNotification) XXX_Size() int {
	return xxx_messageInfo_SMSNotification.Size(m)
}
func (m *SMSNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_SMSNotification.DiscardUnknown(m)
}

var xxx_messageInfo_SMSNotification proto.InternalMessageInfo

func (m *SMSNotification) GetDestinationPhone() []string {
	if m != nil {
		return m.DestinationPhone
	}
	return nil
}

func (m *SMSNotification) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *SMSNotification) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// EmailAndSMSNotification is email and SMS notification combined
type EmailAndSMSNotification struct {
	EmailNotification    *EmailNotification `protobuf:"bytes,1,opt,name=email_notification,json=emailNotification,proto3" json:"email_notification,omitempty"`
	SmsNotification      *SMSNotification   `protobuf:"bytes,2,opt,name=sms_notification,json=smsNotification,proto3" json:"sms_notification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EmailAndSMSNotification) Reset()         { *m = EmailAndSMSNotification{} }
func (m *EmailAndSMSNotification) String() string { return proto.CompactTextString(m) }
func (*EmailAndSMSNotification) ProtoMessage()    {}
func (*EmailAndSMSNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{4}
}

func (m *EmailAndSMSNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailAndSMSNotification.Unmarshal(m, b)
}
func (m *EmailAndSMSNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailAndSMSNotification.Marshal(b, m, deterministic)
}
func (m *EmailAndSMSNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailAndSMSNotification.Merge(m, src)
}
func (m *EmailAndSMSNotification) XXX_Size() int {
	return xxx_messageInfo_EmailAndSMSNotification.Size(m)
}
func (m *EmailAndSMSNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailAndSMSNotification.DiscardUnknown(m)
}

var xxx_messageInfo_EmailAndSMSNotification proto.InternalMessageInfo

func (m *EmailAndSMSNotification) GetEmailNotification() *EmailNotification {
	if m != nil {
		return m.EmailNotification
	}
	return nil
}

func (m *EmailAndSMSNotification) GetSmsNotification() *SMSNotification {
	if m != nil {
		return m.SmsNotification
	}
	return nil
}

// USSDNotification is a USSD popup notification
type USSDNotification struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *USSDNotification) Reset()         { *m = USSDNotification{} }
func (m *USSDNotification) String() string { return proto.CompactTextString(m) }
func (*USSDNotification) ProtoMessage()    {}
func (*USSDNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{5}
}

func (m *USSDNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_USSDNotification.Unmarshal(m, b)
}
func (m *USSDNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_USSDNotification.Marshal(b, m, deterministic)
}
func (m *USSDNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_USSDNotification.Merge(m, src)
}
func (m *USSDNotification) XXX_Size() int {
	return xxx_messageInfo_USSDNotification.Size(m)
}
func (m *USSDNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_USSDNotification.DiscardUnknown(m)
}

var xxx_messageInfo_USSDNotification proto.InternalMessageInfo

// CallNotification is a call notification
type CallNotification struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallNotification) Reset()         { *m = CallNotification{} }
func (m *CallNotification) String() string { return proto.CompactTextString(m) }
func (*CallNotification) ProtoMessage()    {}
func (*CallNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{6}
}

func (m *CallNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallNotification.Unmarshal(m, b)
}
func (m *CallNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallNotification.Marshal(b, m, deterministic)
}
func (m *CallNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallNotification.Merge(m, src)
}
func (m *CallNotification) XXX_Size() int {
	return xxx_messageInfo_CallNotification.Size(m)
}
func (m *CallNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_CallNotification.DiscardUnknown(m)
}

var xxx_messageInfo_CallNotification proto.InternalMessageInfo

// CreateNotificationAccountRequest is request to create a notification/subscriber account
type CreateNotificationAccountRequest struct {
	Channels             []string   `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	AccountId            string     `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Email                string     `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string     `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	SendMethod           SendMethod `protobuf:"varint,5,opt,name=send_method,json=sendMethod,proto3,enum=umrs.notification.SendMethod" json:"send_method,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateNotificationAccountRequest) Reset()         { *m = CreateNotificationAccountRequest{} }
func (m *CreateNotificationAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNotificationAccountRequest) ProtoMessage()    {}
func (*CreateNotificationAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{7}
}

func (m *CreateNotificationAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNotificationAccountRequest.Unmarshal(m, b)
}
func (m *CreateNotificationAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNotificationAccountRequest.Marshal(b, m, deterministic)
}
func (m *CreateNotificationAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNotificationAccountRequest.Merge(m, src)
}
func (m *CreateNotificationAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNotificationAccountRequest.Size(m)
}
func (m *CreateNotificationAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNotificationAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNotificationAccountRequest proto.InternalMessageInfo

func (m *CreateNotificationAccountRequest) GetChannels() []string {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *CreateNotificationAccountRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *CreateNotificationAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateNotificationAccountRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *CreateNotificationAccountRequest) GetSendMethod() SendMethod {
	if m != nil {
		return m.SendMethod
	}
	return SendMethod_EMAIL
}

// ListNotificationsRequest is request to retrieve notifications for a subscriber
type ListNotificationsRequest struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	PageToken            int32    `protobuf:"varint,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageNumber           int32    `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNotificationsRequest) Reset()         { *m = ListNotificationsRequest{} }
func (m *ListNotificationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListNotificationsRequest) ProtoMessage()    {}
func (*ListNotificationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{8}
}

func (m *ListNotificationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNotificationsRequest.Unmarshal(m, b)
}
func (m *ListNotificationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNotificationsRequest.Marshal(b, m, deterministic)
}
func (m *ListNotificationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNotificationsRequest.Merge(m, src)
}
func (m *ListNotificationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListNotificationsRequest.Size(m)
}
func (m *ListNotificationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNotificationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNotificationsRequest proto.InternalMessageInfo

func (m *ListNotificationsRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *ListNotificationsRequest) GetPageToken() int32 {
	if m != nil {
		return m.PageToken
	}
	return 0
}

func (m *ListNotificationsRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

// ListNotificationsResponse is response containing a collection of notifications
type ListNotificationsResponse struct {
	Notifications        []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	NextPageToken        int32           `protobuf:"varint,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListNotificationsResponse) Reset()         { *m = ListNotificationsResponse{} }
func (m *ListNotificationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListNotificationsResponse) ProtoMessage()    {}
func (*ListNotificationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{9}
}

func (m *ListNotificationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNotificationsResponse.Unmarshal(m, b)
}
func (m *ListNotificationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNotificationsResponse.Marshal(b, m, deterministic)
}
func (m *ListNotificationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNotificationsResponse.Merge(m, src)
}
func (m *ListNotificationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListNotificationsResponse.Size(m)
}
func (m *ListNotificationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNotificationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNotificationsResponse proto.InternalMessageInfo

func (m *ListNotificationsResponse) GetNotifications() []*Notification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

func (m *ListNotificationsResponse) GetNextPageToken() int32 {
	if m != nil {
		return m.NextPageToken
	}
	return 0
}

// MarkNotificationReadRequest is request to mark a notification as read
type MarkNotificationReadRequest struct {
	NotificationId       string   `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkNotificationReadRequest) Reset()         { *m = MarkNotificationReadRequest{} }
func (m *MarkNotificationReadRequest) String() string { return proto.CompactTextString(m) }
func (*MarkNotificationReadRequest) ProtoMessage()    {}
func (*MarkNotificationReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_736a457d4a5efa07, []int{10}
}

func (m *MarkNotificationReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkNotificationReadRequest.Unmarshal(m, b)
}
func (m *MarkNotificationReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkNotificationReadRequest.Marshal(b, m, deterministic)
}
func (m *MarkNotificationReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkNotificationReadRequest.Merge(m, src)
}
func (m *MarkNotificationReadRequest) XXX_Size() int {
	return xxx_messageInfo_MarkNotificationReadRequest.Size(m)
}
func (m *MarkNotificationReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkNotificationReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarkNotificationReadRequest proto.InternalMessageInfo

func (m *MarkNotificationReadRequest) GetNotificationId() string {
	if m != nil {
		return m.NotificationId
	}
	return ""
}

func init() {
	proto.RegisterEnum("umrs.notification.Priority", Priority_name, Priority_value)
	proto.RegisterEnum("umrs.notification.SendMethod", SendMethod_name, SendMethod_value)
	proto.RegisterType((*Notification)(nil), "umrs.notification.Notification")
	proto.RegisterType((*NotificationContent)(nil), "umrs.notification.NotificationContent")
	proto.RegisterType((*EmailNotification)(nil), "umrs.notification.EmailNotification")
	proto.RegisterType((*SMSNotification)(nil), "umrs.notification.SMSNotification")
	proto.RegisterType((*EmailAndSMSNotification)(nil), "umrs.notification.EmailAndSMSNotification")
	proto.RegisterType((*USSDNotification)(nil), "umrs.notification.USSDNotification")
	proto.RegisterType((*CallNotification)(nil), "umrs.notification.CallNotification")
	proto.RegisterType((*CreateNotificationAccountRequest)(nil), "umrs.notification.CreateNotificationAccountRequest")
	proto.RegisterType((*ListNotificationsRequest)(nil), "umrs.notification.ListNotificationsRequest")
	proto.RegisterType((*ListNotificationsResponse)(nil), "umrs.notification.ListNotificationsResponse")
	proto.RegisterType((*MarkNotificationReadRequest)(nil), "umrs.notification.MarkNotificationReadRequest")
}

func init() { proto.RegisterFile("notification.proto", fileDescriptor_736a457d4a5efa07) }

var fileDescriptor_736a457d4a5efa07 = []byte{
	// 1117 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xcf, 0x6e, 0xe3, 0x44,
	0x18, 0x5f, 0x27, 0x4d, 0x9b, 0x7c, 0x69, 0x1a, 0x67, 0x58, 0x81, 0xb7, 0xdd, 0xaa, 0x59, 0x53,
	0xed, 0x66, 0xb3, 0xdb, 0x44, 0xea, 0x0a, 0x16, 0x21, 0xb1, 0xa2, 0x9b, 0x96, 0x6d, 0xa4, 0xa6,
	0x5b, 0x39, 0xad, 0x90, 0xb8, 0x58, 0x8e, 0x3d, 0x4d, 0x4d, 0xe3, 0x19, 0xe3, 0x99, 0x6c, 0x89,
	0x56, 0x5c, 0x38, 0x72, 0x43, 0x70, 0xe5, 0x15, 0x78, 0x03, 0x4e, 0x9c, 0x38, 0xf3, 0x02, 0x1c,
	0x78, 0x10, 0x34, 0x63, 0xbb, 0xeb, 0x38, 0x36, 0x2d, 0xe2, 0xe4, 0x99, 0xdf, 0xf7, 0x7f, 0xe6,
	0xfb, 0x7d, 0x63, 0x40, 0x84, 0x72, 0xf7, 0xdc, 0xb5, 0x2d, 0xee, 0x52, 0xd2, 0xf1, 0x03, 0xca,
	0x29, 0x6a, 0x78, 0xf6, 0xb9, 0xdf, 0x49, 0x0a, 0xd6, 0x37, 0xc6, 0x94, 0x8e, 0x27, 0xb8, 0x2b,
	0x15, 0x46, 0xd3, 0xf3, 0x2e, 0xf6, 0x7c, 0x3e, 0x0b, 0xf5, 0xd7, 0xef, 0x47, 0x42, 0xcb, 0x77,
	0xbb, 0x16, 0x21, 0x94, 0x4b, 0x1b, 0x16, 0x49, 0x9f, 0xca, 0x8f, 0xbd, 0x33, 0xc6, 0x64, 0x87,
	0x5d, 0x59, 0xe3, 0x31, 0x0e, 0xba, 0xd4, 0x97, 0x1a, 0x8b, 0xda, 0xfa, 0xef, 0xcb, 0xb0, 0x7a,
	0x9c, 0x88, 0x8c, 0x1e, 0x41, 0x3d, 0x99, 0x89, 0xe9, 0x3a, 0x9a, 0xd2, 0x54, 0x5a, 0x15, 0x63,
	0x2d, 0x09, 0xf7, 0x1d, 0xb4, 0x01, 0x15, 0x7a, 0x45, 0x70, 0x60, 0xba, 0x0e, 0xd3, 0x0a, 0xcd,
	0x62, 0xab, 0x62, 0x94, 0x25, 0xd0, 0x77, 0x18, 0x7a, 0x0e, 0x65, 0x3f, 0x70, 0x69, 0xe0, 0xf2,
	0x99, 0x56, 0x6c, 0x2a, 0xad, 0xb5, 0xdd, 0x8d, 0xce, 0x42, 0x95, 0x9d, 0x93, 0x48, 0xc5, 0xb8,
	0x56, 0x46, 0x2f, 0xa0, 0xca, 0x30, 0x71, 0x4c, 0x0f, 0xf3, 0x0b, 0xea, 0x68, 0x4b, 0xd2, 0x76,
	0x33, 0xc3, 0x76, 0x88, 0x89, 0x33, 0x90, 0x4a, 0x06, 0xb0, 0xeb, 0x35, 0xfa, 0x1c, 0x56, 0x6c,
	0x4a, 0x38, 0x26, 0x5c, 0x2b, 0x35, 0x95, 0x56, 0x75, 0xf7, 0x61, 0x86, 0x6d, 0xb2, 0xe0, 0x5e,
	0xa8, 0x6d, 0xc4, 0x66, 0xe8, 0x21, 0xd4, 0xed, 0x00, 0x5b, 0x1c, 0x9b, 0xdc, 0xf5, 0xb0, 0xc9,
	0xb0, 0xad, 0x2d, 0x37, 0x95, 0x56, 0xd1, 0xa8, 0x85, 0xf0, 0xa9, 0xeb, 0xe1, 0x21, 0xb6, 0xd1,
	0x19, 0x20, 0xec, 0x59, 0xee, 0xc4, 0x4c, 0xba, 0xd6, 0x56, 0x64, 0xd0, 0xed, 0x8c, 0xa0, 0x07,
	0x42, 0x39, 0x19, 0xf9, 0xf0, 0x8e, 0xd1, 0xc0, 0x69, 0x10, 0xbd, 0x06, 0x95, 0x79, 0x6c, 0xde,
	0x69, 0x59, 0x3a, 0xd5, 0xb3, 0x4e, 0x61, 0x30, 0x4c, 0xb9, 0xac, 0x33, 0x8f, 0xcd, 0x39, 0x34,
	0xa0, 0x31, 0x65, 0xcc, 0x99, 0xf7, 0x58, 0x91, 0x1e, 0x3f, 0xcc, 0xf0, 0x78, 0x36, 0x1c, 0xee,
	0xa7, 0x5c, 0xaa, 0xc2, 0x3e, 0xed, 0xd3, 0xb6, 0x26, 0xa9, 0xd2, 0x21, 0xd7, 0x67, 0xcf, 0x9a,
	0xa4, 0x2b, 0x57, 0xed, 0x14, 0x86, 0x4e, 0xa0, 0x16, 0x9e, 0xa7, 0x45, 0x1c, 0x93, 0x79, 0x4c,
	0xab, 0x4a, 0x7f, 0xed, 0xbc, 0xa3, 0xdc, 0x23, 0xce, 0x62, 0xf5, 0x55, 0x1c, 0x8b, 0x3c, 0x86,
	0x1e, 0xc0, 0xea, 0x68, 0x3a, 0xb9, 0x34, 0xed, 0x0b, 0x8b, 0x10, 0x3c, 0xd1, 0x56, 0x65, 0x1f,
	0x57, 0x05, 0xd6, 0x0b, 0x21, 0x84, 0x60, 0x49, 0x6c, 0xb5, 0x5a, 0x53, 0x69, 0x95, 0x0d, 0xb9,
	0x16, 0x18, 0xb3, 0xde, 0x60, 0x6d, 0x2d, 0xc4, 0xc4, 0x5a, 0x62, 0x18, 0x13, 0xad, 0x1e, 0x61,
	0x18, 0x93, 0x97, 0x15, 0x58, 0xf1, 0xad, 0xd9, 0x84, 0x5a, 0x8e, 0xde, 0x83, 0xf7, 0x32, 0x7a,
	0x0a, 0x69, 0xb0, 0xc2, 0xa6, 0xa3, 0xaf, 0xb1, 0xcd, 0x23, 0x0e, 0xc5, 0x5b, 0xe1, 0xcf, 0xb1,
	0xb8, 0xa5, 0x15, 0x24, 0x2c, 0xd7, 0xfa, 0x8f, 0x0a, 0x34, 0x16, 0x9a, 0x04, 0xad, 0x41, 0x81,
	0xd3, 0x88, 0x5f, 0x05, 0x4e, 0x85, 0xe5, 0x79, 0x40, 0xbd, 0xc8, 0xa1, 0x5c, 0x27, 0xe3, 0x14,
	0xe7, 0xe3, 0xb4, 0xa1, 0x31, 0xa2, 0xce, 0xcc, 0x8c, 0x9a, 0xdb, 0xe4, 0x33, 0x1f, 0x4b, 0x52,
	0x55, 0x8c, 0xba, 0x10, 0x44, 0x99, 0x9e, 0xce, 0x7c, 0x59, 0xa3, 0x80, 0x24, 0x6f, 0x2a, 0x86,
	0x5c, 0xeb, 0x01, 0xd4, 0x53, 0x87, 0x8c, 0x9e, 0x40, 0xc3, 0xc1, 0x8c, 0xbb, 0x24, 0x9c, 0x0f,
	0xfe, 0x05, 0x25, 0x38, 0xca, 0x4f, 0x4d, 0x08, 0x4e, 0x04, 0x2e, 0x32, 0xbb, 0xc4, 0xb3, 0x2b,
	0x1a, 0xc4, 0x53, 0x24, 0xde, 0x0a, 0x89, 0x87, 0x19, 0xb3, 0xc6, 0x38, 0xce, 0x39, 0xda, 0xea,
	0xbf, 0x29, 0xf0, 0x41, 0xce, 0x0d, 0xa3, 0x61, 0x26, 0xe9, 0x94, 0xdb, 0x93, 0x2e, 0x8b, 0x72,
	0x83, 0x0c, 0xca, 0x15, 0x6e, 0x4b, 0xb9, 0x05, 0xc2, 0xe9, 0x08, 0xd4, 0x34, 0x89, 0x04, 0x96,
	0x26, 0x81, 0xfe, 0x87, 0x02, 0xcd, 0x9e, 0x1c, 0x29, 0x49, 0x78, 0xcf, 0xb6, 0xe9, 0x94, 0x70,
	0x03, 0x7f, 0x33, 0xc5, 0x8c, 0xa3, 0x75, 0x28, 0x47, 0xed, 0xcb, 0x34, 0x25, 0x1c, 0xb2, 0xf1,
	0x1e, 0x6d, 0x02, 0x58, 0xa1, 0xb6, 0x98, 0xd2, 0x61, 0x2b, 0x55, 0x22, 0xa4, 0xef, 0xa0, 0xbb,
	0x50, 0x92, 0xb5, 0x46, 0xe7, 0x1b, 0x6e, 0x04, 0x1a, 0x5e, 0x59, 0xd8, 0x05, 0xe1, 0x26, 0x3d,
	0x76, 0x4b, 0xff, 0x71, 0xec, 0xea, 0x33, 0xd0, 0x8e, 0x5c, 0xc6, 0x93, 0x85, 0xb0, 0xb8, 0x84,
	0xf9, 0x34, 0x95, 0x74, 0x9a, 0x9b, 0x00, 0xbe, 0x35, 0xc6, 0x26, 0xa7, 0x97, 0x38, 0x3c, 0xf7,
	0x92, 0x51, 0x11, 0xc8, 0xa9, 0x00, 0xd0, 0x16, 0x54, 0xa5, 0x98, 0x4c, 0xbd, 0x11, 0x0e, 0x64,
	0x2d, 0x25, 0x43, 0x5a, 0x1c, 0x4b, 0x44, 0xff, 0x41, 0x81, 0x7b, 0x19, 0xb1, 0x99, 0x4f, 0x09,
	0xc3, 0xe8, 0x00, 0x6a, 0xc9, 0xfc, 0xc3, 0x43, 0xac, 0xee, 0x6e, 0xdd, 0xf0, 0x2a, 0x18, 0xf3,
	0x56, 0xe2, 0x51, 0x20, 0xf8, 0x5b, 0x6e, 0x2e, 0x64, 0x5a, 0x13, 0xf0, 0x49, 0x9c, 0xad, 0xfe,
	0x05, 0x6c, 0x0c, 0xac, 0xe0, 0x72, 0xce, 0x15, 0xb6, 0x9c, 0xf8, 0x28, 0x6e, 0xfb, 0xb8, 0xb6,
	0x1f, 0x43, 0x39, 0x7e, 0x1c, 0x11, 0xc0, 0xf2, 0xe0, 0x60, 0xbf, 0x7f, 0x36, 0x50, 0xef, 0xa0,
	0x32, 0x2c, 0x1d, 0xf6, 0x5f, 0x1d, 0xaa, 0x0a, 0x5a, 0x81, 0xe2, 0xd1, 0xeb, 0x2f, 0xd5, 0x42,
	0xfb, 0x15, 0xc0, 0xbb, 0x4b, 0x41, 0x15, 0x28, 0x1d, 0x0c, 0xf6, 0xfa, 0x47, 0xea, 0x1d, 0xa1,
	0x31, 0x1c, 0x0c, 0x55, 0x45, 0x18, 0x89, 0x86, 0x54, 0x0b, 0x62, 0xd5, 0xdb, 0x3b, 0x3a, 0x52,
	0x8b, 0xa8, 0x01, 0x35, 0xa9, 0x67, 0xee, 0x1d, 0xef, 0x9b, 0x42, 0x6d, 0x69, 0xf7, 0xaf, 0xd2,
	0xfc, 0x14, 0x1b, 0xe2, 0xe0, 0x8d, 0x6b, 0x63, 0xf4, 0xb3, 0x02, 0xf7, 0x72, 0xfb, 0x14, 0x3d,
	0xcb, 0x9a, 0xf7, 0x37, 0x74, 0xf5, 0xfa, 0xfb, 0x9d, 0xf0, 0x17, 0xa6, 0x13, 0xff, 0xdf, 0x74,
	0x0e, 0xc4, 0xff, 0x8d, 0xde, 0xfe, 0xfe, 0xcf, 0xbf, 0x7f, 0x2a, 0x6c, 0xeb, 0x5b, 0xf2, 0xdf,
	0x46, 0x38, 0xee, 0xce, 0xdd, 0x43, 0x37, 0x6a, 0x9b, 0x4f, 0x95, 0x36, 0xba, 0x80, 0x25, 0x51,
	0x37, 0xba, 0xe9, 0x2a, 0x73, 0x83, 0x3d, 0x92, 0xc1, 0x1e, 0xe8, 0xf7, 0xf3, 0x82, 0x89, 0xfe,
	0x16, 0x91, 0xae, 0xa0, 0x1a, 0xbd, 0x17, 0xff, 0x2f, 0x60, 0x57, 0x06, 0x7c, 0xac, 0x6f, 0xe7,
	0x05, 0x8c, 0x98, 0xbd, 0x13, 0x07, 0xfe, 0x55, 0x81, 0xc6, 0x42, 0x6b, 0xa3, 0x27, 0x19, 0xf1,
	0xf3, 0xc8, 0xb7, 0xfe, 0xf4, 0x76, 0xca, 0x21, 0x5b, 0xf4, 0x17, 0x32, 0xc3, 0x4f, 0xd0, 0xc7,
	0x79, 0x19, 0x4e, 0x19, 0x0e, 0x58, 0xf7, 0xed, 0x3b, 0x3e, 0x7f, 0xd7, 0xb5, 0x6c, 0x21, 0xea,
	0x4e, 0x5c, 0xc6, 0xd1, 0x2f, 0x0a, 0xdc, 0xcd, 0xea, 0x7f, 0xd4, 0xc9, 0x48, 0xe3, 0x5f, 0x88,
	0x92, 0x7b, 0x84, 0x9f, 0xc9, 0x04, 0x9f, 0xa3, 0x8f, 0xf2, 0x12, 0x7c, 0x9b, 0xe2, 0xd7, 0x75,
	0x7e, 0x01, 0xb6, 0x9c, 0x97, 0x6b, 0x5f, 0xad, 0x26, 0xe5, 0xa3, 0x65, 0xe9, 0xfe, 0xd9, 0x3f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xc6, 0xb6, 0x96, 0xa4, 0x96, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NotificationServiceClient is the client API for NotificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotificationServiceClient interface {
	// Creates a default notification and subscriber channel account
	CreateNotificationAccount(ctx context.Context, in *CreateNotificationAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Sends a notification to its destinations
	Send(ctx context.Context, in *Notification, opts ...grpc.CallOption) (*empty.Empty, error)
	// Sends a notification to members of a particular channel
	ChannelSend(ctx context.Context, in *Notification, opts ...grpc.CallOption) (*empty.Empty, error)
	// Retrieves collection of user notifications
	ListNotifications(ctx context.Context, in *ListNotificationsRequest, opts ...grpc.CallOption) (*ListNotificationsResponse, error)
	// Marks a single notification as read
	MarkNotificationRead(ctx context.Context, in *MarkNotificationReadRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type notificationServiceClient struct {
	cc *grpc.ClientConn
}

func NewNotificationServiceClient(cc *grpc.ClientConn) NotificationServiceClient {
	return &notificationServiceClient{cc}
}

func (c *notificationServiceClient) CreateNotificationAccount(ctx context.Context, in *CreateNotificationAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/umrs.notification.NotificationService/CreateNotificationAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationServiceClient) Send(ctx context.Context, in *Notification, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/umrs.notification.NotificationService/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationServiceClient) ChannelSend(ctx context.Context, in *Notification, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/umrs.notification.NotificationService/ChannelSend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationServiceClient) ListNotifications(ctx context.Context, in *ListNotificationsRequest, opts ...grpc.CallOption) (*ListNotificationsResponse, error) {
	out := new(ListNotificationsResponse)
	err := c.cc.Invoke(ctx, "/umrs.notification.NotificationService/ListNotifications", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationServiceClient) MarkNotificationRead(ctx context.Context, in *MarkNotificationReadRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/umrs.notification.NotificationService/MarkNotificationRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotificationServiceServer is the server API for NotificationService service.
type NotificationServiceServer interface {
	// Creates a default notification and subscriber channel account
	CreateNotificationAccount(context.Context, *CreateNotificationAccountRequest) (*empty.Empty, error)
	// Sends a notification to its destinations
	Send(context.Context, *Notification) (*empty.Empty, error)
	// Sends a notification to members of a particular channel
	ChannelSend(context.Context, *Notification) (*empty.Empty, error)
	// Retrieves collection of user notifications
	ListNotifications(context.Context, *ListNotificationsRequest) (*ListNotificationsResponse, error)
	// Marks a single notification as read
	MarkNotificationRead(context.Context, *MarkNotificationReadRequest) (*empty.Empty, error)
}

func RegisterNotificationServiceServer(s *grpc.Server, srv NotificationServiceServer) {
	s.RegisterService(&_NotificationService_serviceDesc, srv)
}

func _NotificationService_CreateNotificationAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNotificationAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).CreateNotificationAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.notification.NotificationService/CreateNotificationAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).CreateNotificationAccount(ctx, req.(*CreateNotificationAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Notification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.notification.NotificationService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).Send(ctx, req.(*Notification))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationService_ChannelSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Notification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).ChannelSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.notification.NotificationService/ChannelSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).ChannelSend(ctx, req.(*Notification))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationService_ListNotifications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNotificationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).ListNotifications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.notification.NotificationService/ListNotifications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).ListNotifications(ctx, req.(*ListNotificationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationService_MarkNotificationRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkNotificationReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).MarkNotificationRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/umrs.notification.NotificationService/MarkNotificationRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).MarkNotificationRead(ctx, req.(*MarkNotificationReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "umrs.notification.NotificationService",
	HandlerType: (*NotificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNotificationAccount",
			Handler:    _NotificationService_CreateNotificationAccount_Handler,
		},
		{
			MethodName: "Send",
			Handler:    _NotificationService_Send_Handler,
		},
		{
			MethodName: "ChannelSend",
			Handler:    _NotificationService_ChannelSend_Handler,
		},
		{
			MethodName: "ListNotifications",
			Handler:    _NotificationService_ListNotifications_Handler,
		},
		{
			MethodName: "MarkNotificationRead",
			Handler:    _NotificationService_MarkNotificationRead_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notification.proto",
}
